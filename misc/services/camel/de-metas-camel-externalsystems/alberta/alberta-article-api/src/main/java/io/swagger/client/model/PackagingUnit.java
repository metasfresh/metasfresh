/*
 * Artikel - Warenwirtschaft (Basis)
 * Synchronisation der Artikel mit Kumavision
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.math.BigDecimal;
import java.util.Objects;
/**
 * PackagingUnit
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-18T14:17:41.660Z[GMT]")
public class PackagingUnit {
  @SerializedName("unit")
  private String unit = null;

  @SerializedName("quantity")
  private BigDecimal quantity = null;

  @SerializedName("pcn")
  private String pcn = null;

  @SerializedName("defaultPackagingUnit")
  private Boolean defaultPackagingUnit = null;

  @SerializedName("archived")
  private Boolean archived = null;

  public PackagingUnit unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Verpackungseinheit Stk für Einzelartikel oder Ktn für Verpackungen mit mehreren Stück
   * @return unit
  **/
  @Schema(example = "Stk", required = true, description = "Verpackungseinheit Stk für Einzelartikel oder Ktn für Verpackungen mit mehreren Stück")
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }

  public PackagingUnit quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Menge
   * @return quantity
  **/
  @Schema(example = "3", required = true, description = "Menge")
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }

  public PackagingUnit pcn(String pcn) {
    this.pcn = pcn;
    return this;
  }

   /**
   * PZN (Pharmazentralnummer)
   * @return pcn
  **/
  @Schema(example = "02151950", required = true, description = "PZN (Pharmazentralnummer)")
  public String getPcn() {
    return pcn;
  }

  public void setPcn(String pcn) {
    this.pcn = pcn;
  }

  public PackagingUnit defaultPackagingUnit(Boolean defaultPackagingUnit) {
    this.defaultPackagingUnit = defaultPackagingUnit;
    return this;
  }

   /**
   * Voreingestelle Verpackungseinheit Ja/Nein (für Warenkorb)
   * @return defaultPackagingUnit
  **/
  @Schema(example = "true", required = true, description = "Voreingestelle Verpackungseinheit Ja/Nein (für Warenkorb)")
  public Boolean isDefaultPackagingUnit() {
    return defaultPackagingUnit;
  }

  public void setDefaultPackagingUnit(Boolean defaultPackagingUnit) {
    this.defaultPackagingUnit = defaultPackagingUnit;
  }

  public PackagingUnit archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

   /**
   * Kennzeichen ob Verpackungseinheit archiviert ist, d. h. nicht mehr im Warenkorb ausgewählt werden kann
   * @return archived
  **/
  @Schema(example = "false", description = "Kennzeichen ob Verpackungseinheit archiviert ist, d. h. nicht mehr im Warenkorb ausgewählt werden kann")
  public Boolean isArchived() {
    return archived;
  }

  public void setArchived(Boolean archived) {
    this.archived = archived;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PackagingUnit packagingUnit = (PackagingUnit) o;
    return Objects.equals(this.unit, packagingUnit.unit) &&
        Objects.equals(this.quantity, packagingUnit.quantity) &&
        Objects.equals(this.pcn, packagingUnit.pcn) &&
        Objects.equals(this.defaultPackagingUnit, packagingUnit.defaultPackagingUnit) &&
        Objects.equals(this.archived, packagingUnit.archived);
  }

  @Override
  public int hashCode() {
    return Objects.hash(unit, quantity, pcn, defaultPackagingUnit, archived);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PackagingUnit {\n");
    
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    pcn: ").append(toIndentedString(pcn)).append("\n");
    sb.append("    defaultPackagingUnit: ").append(toIndentedString(defaultPackagingUnit)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
