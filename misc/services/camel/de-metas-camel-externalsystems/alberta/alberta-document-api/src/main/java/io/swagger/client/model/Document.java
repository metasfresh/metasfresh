/*
 * Dokumente - Warenwirtschaft (Basis)
 * Synchronisation der Dokumente aus Alberta
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.math.BigDecimal;
import java.util.Objects;
/**
 * Document
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-17T14:20:17.484Z[GMT]")
public class Document {
  @SerializedName("_id")
  private String _id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("patientId")
  private String patientId = null;

  @SerializedName("therapyId")
  private BigDecimal therapyId = null;

  @SerializedName("therapyTypeId")
  private BigDecimal therapyTypeId = null;

  @SerializedName("archived")
  private Boolean archived = null;

  @SerializedName("createdBy")
  private String createdBy = null;

  @SerializedName("updatedBy")
  private String updatedBy = null;

  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("updatedAt")
  private OffsetDateTime updatedAt = null;

  public Document _id(String _id) {
    this._id = _id;
    return this;
  }

   /**
   * Get _id
   * @return _id
  **/
  @Schema(example = "a4adecb6-126a-4fa6-8fac-e80165ac8980", description = "")
  public String getId() {
    return _id;
  }

  public void setId(String _id) {
    this._id = _id;
  }

  public Document name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name der Dokumentenvorlage
   * @return name
  **/
  @Schema(example = "Anamnese WV", description = "Name der Dokumentenvorlage")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Document patientId(String patientId) {
    this.patientId = patientId;
    return this;
  }

   /**
   * Id des Patienten in Alberta
   * @return patientId
  **/
  @Schema(example = "a4adecb6-126a-4fa6-8fac-e80165ac4264", description = "Id des Patienten in Alberta")
  public String getPatientId() {
    return patientId;
  }

  public void setPatientId(String patientId) {
    this.patientId = patientId;
  }

  public Document therapyId(BigDecimal therapyId) {
    this.therapyId = therapyId;
    return this;
  }

   /**
   * Id der Therapie (0&#x3D; Unbekannt, 1 &#x3D; Parenterale Ernährung, 2 &#x3D; Enterale Ernährung, 3 &#x3D; Stoma, 4 &#x3D; Tracheostoma, 5 &#x3D; Inkontinenz ableitend, 6 &#x3D; Wundversorgung, 7 &#x3D; IV-Therapien, 8 &#x3D; Beatmung, 9 &#x3D; Sonstiges, 10 &#x3D; OSA, 11 &#x3D; Hustenhilfen, 12 &#x3D; Absaugung, 13 &#x3D; Patientenüberwachung, 14 &#x3D; Sauerstoff, 15 &#x3D; Inhalations- und Atemtherapie)
   * minimum: 0
   * maximum: 15
   * @return therapyId
  **/
  @Schema(example = "1", description = "Id der Therapie (0= Unbekannt, 1 = Parenterale Ernährung, 2 = Enterale Ernährung, 3 = Stoma, 4 = Tracheostoma, 5 = Inkontinenz ableitend, 6 = Wundversorgung, 7 = IV-Therapien, 8 = Beatmung, 9 = Sonstiges, 10 = OSA, 11 = Hustenhilfen, 12 = Absaugung, 13 = Patientenüberwachung, 14 = Sauerstoff, 15 = Inhalations- und Atemtherapie)")
  public BigDecimal getTherapyId() {
    return therapyId;
  }

  public void setTherapyId(BigDecimal therapyId) {
    this.therapyId = therapyId;
  }

  public Document therapyTypeId(BigDecimal therapyTypeId) {
    this.therapyTypeId = therapyTypeId;
    return this;
  }

   /**
   * Id der Therapieart (Schwerkraft_PE &#x3D; 0, Pumpe_immobil_PE &#x3D; 1, Pumpe_mobil_PE &#x3D; 2, Schwerkraft_EE &#x3D; 3, Pumpe_immobil_EE &#x3D; 4, Pumpe_mobil_EE &#x3D; 5, Bolus &#x3D; 6, Trinknahrung &#x3D; 7, Kolostoma &#x3D; 8, Urostoma &#x3D; 9, Ileostoma &#x3D; 10, Tracheostoma_beatmet &#x3D; 11, Laryngektomie_beatmet &#x3D; 12, Inkontinenz_ableitend &#x3D; 13, Ulcus_cruris &#x3D; 14, Dekubitus &#x3D; 15, Diabetisches_Fußsyndrom &#x3D; 16, Ulzerierte_Tumore &#x3D; 17, Wundfisteln &#x3D; 18, sonstige_chronische_Wunden &#x3D; 19, Diabetes &#x3D; 20, Pflegehilfsmittel &#x3D; 21, Inkontinenz_aufsaugend &#x3D; 22, Compounding &#x3D; 23, Fistel &#x3D; 24, Antibiose &#x3D; 25, Tracheostoma_unbeatmet &#x3D; 26, Laryngektomie_unbeatmet &#x3D; 27, Absaugung_außerhalb_von_TS &#x3D; 28, Beatmung &#x3D; 29, sonstige_Wunden &#x3D; 30, Schmerztherapie &#x3D; 31,  Beatmung_invasiv &#x3D; 32, Beatmung_nicht_invasiv &#x3D; 33, Befeuchtung_aktiv&#x3D; 34, Befeuchtung_passiv &#x3D; 35, Befeuchtung_integriert &#x3D; 36, High_Flow&#x3D; 37, CPAP &#x3D; 38, APAP &#x3D; 39, Bilevel &#x3D; 40, Bilevel_ST &#x3D; 41, Auto_Bilevel &#x3D; 42, CS &#x3D; 43, Hustenhilfen &#x3D; 44, Sekretmobilisation &#x3D; 45, Absaugung_oral &#x3D; 46, Absaugung_subglottisch &#x3D; 47, Monitoring &#x3D; 48, Pulsoximetrie &#x3D; 49, Fingerpulsoximetrie &#x3D; 50, Kapnometer &#x3D; 51, Blutdruckmessgeraet &#x3D; 52, Sauerstoff_mobil &#x3D; 53, Sauerstoff_fluessig &#x3D; 54, Inhalation &#x3D; 55, Medikamentenvernebler &#x3D; 56, Ultraschallvernebler &#x3D; 57, PEP_Systeme &#x3D; 58, IPPB_Inhalation &#x3D; 59,  Atemtherapie &#x3D; 60)
   * minimum: 11
   * maximum: 60
   * @return therapyTypeId
  **/
  @Schema(example = "11", description = "Id der Therapieart (Schwerkraft_PE = 0, Pumpe_immobil_PE = 1, Pumpe_mobil_PE = 2, Schwerkraft_EE = 3, Pumpe_immobil_EE = 4, Pumpe_mobil_EE = 5, Bolus = 6, Trinknahrung = 7, Kolostoma = 8, Urostoma = 9, Ileostoma = 10, Tracheostoma_beatmet = 11, Laryngektomie_beatmet = 12, Inkontinenz_ableitend = 13, Ulcus_cruris = 14, Dekubitus = 15, Diabetisches_Fußsyndrom = 16, Ulzerierte_Tumore = 17, Wundfisteln = 18, sonstige_chronische_Wunden = 19, Diabetes = 20, Pflegehilfsmittel = 21, Inkontinenz_aufsaugend = 22, Compounding = 23, Fistel = 24, Antibiose = 25, Tracheostoma_unbeatmet = 26, Laryngektomie_unbeatmet = 27, Absaugung_außerhalb_von_TS = 28, Beatmung = 29, sonstige_Wunden = 30, Schmerztherapie = 31,  Beatmung_invasiv = 32, Beatmung_nicht_invasiv = 33, Befeuchtung_aktiv= 34, Befeuchtung_passiv = 35, Befeuchtung_integriert = 36, High_Flow= 37, CPAP = 38, APAP = 39, Bilevel = 40, Bilevel_ST = 41, Auto_Bilevel = 42, CS = 43, Hustenhilfen = 44, Sekretmobilisation = 45, Absaugung_oral = 46, Absaugung_subglottisch = 47, Monitoring = 48, Pulsoximetrie = 49, Fingerpulsoximetrie = 50, Kapnometer = 51, Blutdruckmessgeraet = 52, Sauerstoff_mobil = 53, Sauerstoff_fluessig = 54, Inhalation = 55, Medikamentenvernebler = 56, Ultraschallvernebler = 57, PEP_Systeme = 58, IPPB_Inhalation = 59,  Atemtherapie = 60)")
  public BigDecimal getTherapyTypeId() {
    return therapyTypeId;
  }

  public void setTherapyTypeId(BigDecimal therapyTypeId) {
    this.therapyTypeId = therapyTypeId;
  }

  public Document archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

   /**
   * Kennzeichen, ob das Dokument vom Benutzer archiviert wurde
   * @return archived
  **/
  @Schema(example = "false", description = "Kennzeichen, ob das Dokument vom Benutzer archiviert wurde")
  public Boolean isArchived() {
    return archived;
  }

  public void setArchived(Boolean archived) {
    this.archived = archived;
  }

  public Document createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Id des erstellenden Benutzers (Voraussetzung, Alberta-Id ist bereits durch initialen Abgleich der Benutzer in WaWi vorhanden)
   * @return createdBy
  **/
  @Schema(example = "5a6ca8b6456c14307cb9ae35", description = "Id des erstellenden Benutzers (Voraussetzung, Alberta-Id ist bereits durch initialen Abgleich der Benutzer in WaWi vorhanden)")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public Document updatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Id des zuletzt ändernden Benutzers (Voraussetzung, Alberta-Id ist bereits durch initialen Abgleich der Benutzer in WaWi vorhanden)
   * @return updatedBy
  **/
  @Schema(example = "5a6ca8b6456c14307cb9ae35", description = "Id des zuletzt ändernden Benutzers (Voraussetzung, Alberta-Id ist bereits durch initialen Abgleich der Benutzer in WaWi vorhanden)")
  public String getUpdatedBy() {
    return updatedBy;
  }

  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }

  public Document createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Der Zeitstempel des Erstellens
   * @return createdAt
  **/
  @Schema(description = "Der Zeitstempel des Erstellens")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Document updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Der Zeitstempel der letzten Änderung
   * @return updatedAt
  **/
  @Schema(description = "Der Zeitstempel der letzten Änderung")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Document document = (Document) o;
    return Objects.equals(this._id, document._id) &&
        Objects.equals(this.name, document.name) &&
        Objects.equals(this.patientId, document.patientId) &&
        Objects.equals(this.therapyId, document.therapyId) &&
        Objects.equals(this.therapyTypeId, document.therapyTypeId) &&
        Objects.equals(this.archived, document.archived) &&
        Objects.equals(this.createdBy, document.createdBy) &&
        Objects.equals(this.updatedBy, document.updatedBy) &&
        Objects.equals(this.createdAt, document.createdAt) &&
        Objects.equals(this.updatedAt, document.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_id, name, patientId, therapyId, therapyTypeId, archived, createdBy, updatedBy, createdAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Document {\n");
    
    sb.append("    _id: ").append(toIndentedString(_id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    patientId: ").append(toIndentedString(patientId)).append("\n");
    sb.append("    therapyId: ").append(toIndentedString(therapyId)).append("\n");
    sb.append("    therapyTypeId: ").append(toIndentedString(therapyTypeId)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
