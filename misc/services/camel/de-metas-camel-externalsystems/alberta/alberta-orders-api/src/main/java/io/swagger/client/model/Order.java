/*
 * Aufträge - Warenwirtschaft (Basis)
 * Synchronisation der Bestellungen aus Alberta mit den Aufträgen mit der Warenwirtschaft
 *
 * OpenAPI spec version: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * Order
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-04T13:49:41.437Z[GMT]")
public class Order {
  @SerializedName("_id")
  private String _id = null;

  @SerializedName("salesId")
  private String salesId = null;

  @SerializedName("patientId")
  private String patientId = null;

  @SerializedName("rootId")
  private String rootId = null;

  @SerializedName("creationDate")
  private OffsetDateTime creationDate = null;

  @SerializedName("deliveryDate")
  private LocalDate deliveryDate = null;

  @SerializedName("startDate")
  private LocalDate startDate = null;

  @SerializedName("endDate")
  private LocalDate endDate = null;

  @SerializedName("dayOfDelivery")
  private BigDecimal dayOfDelivery = null;

  @SerializedName("nextDelivery")
  private LocalDate nextDelivery = null;

  @SerializedName("deliveryAddress")
  private OrderDeliveryAddress deliveryAddress = null;

  @SerializedName("doctorId")
  private String doctorId = null;

  @SerializedName("hospitalId")
  private String hospitalId = null;

  @SerializedName("pharmacyId")
  private String pharmacyId = null;

  @SerializedName("therapyId")
  private BigDecimal therapyId = null;

  @SerializedName("therapyTypeIds")
  private List<BigDecimal> therapyTypeIds = null;

  @SerializedName("isInitialCare")
  private Boolean isInitialCare = null;

  @SerializedName("orderedArticleLines")
  private List<OrderedArticleLine> orderedArticleLines = null;

  @SerializedName("createdBy")
  private String createdBy = null;

  @SerializedName("status")
  private BigDecimal status = null;

  @SerializedName("isSeriesOrder")
  private Boolean isSeriesOrder = null;

  @SerializedName("annotation")
  private String annotation = null;

  @SerializedName("deliveryInformation")
  private String deliveryInformation = null;

  @SerializedName("deliveryNote")
  private String deliveryNote = null;

  @SerializedName("archived")
  private Boolean archived = null;

  @SerializedName("timestamp")
  private OffsetDateTime timestamp = null;

  @SerializedName("updated")
  private OffsetDateTime updated = null;

  public Order _id(String _id) {
    this._id = _id;
    return this;
  }

   /**
   * Get _id
   * @return _id
  **/
  @Schema(example = "a4adecb6-126a-4fa6-8fac-e80165ac8980 -> muss bei POST leer bleiben", description = "")
  public String getId() {
    return _id;
  }

  public void setId(String _id) {
    this._id = _id;
  }

  public Order salesId(String salesId) {
    this.salesId = salesId;
    return this;
  }

   /**
   * Id des Auftrag im WaWi
   * @return salesId
  **/
  @Schema(example = "A323232", description = "Id des Auftrag im WaWi")
  public String getSalesId() {
    return salesId;
  }

  public void setSalesId(String salesId) {
    this.salesId = salesId;
  }

  public Order patientId(String patientId) {
    this.patientId = patientId;
    return this;
  }

   /**
   * Id des Patienten in Alberta
   * @return patientId
  **/
  @Schema(example = "a4adecb6-126a-4fa6-8fac-e80165ac4264", required = true, description = "Id des Patienten in Alberta")
  public String getPatientId() {
    return patientId;
  }

  public void setPatientId(String patientId) {
    this.patientId = patientId;
  }

  public Order rootId(String rootId) {
    this.rootId = rootId;
    return this;
  }

   /**
   * Id der übergeordeneten Bestellung - falls gesetzt Zusatzbestellung
   * @return rootId
  **/
  @Schema(example = "2548b39d-a542-4f03-adb4-75d9fc4f2266", description = "Id der übergeordeneten Bestellung - falls gesetzt Zusatzbestellung")
  public String getRootId() {
    return rootId;
  }

  public void setRootId(String rootId) {
    this.rootId = rootId;
  }

  public Order creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public Order deliveryDate(LocalDate deliveryDate) {
    this.deliveryDate = deliveryDate;
    return this;
  }

   /**
   * Get deliveryDate
   * @return deliveryDate
  **/
  @Schema(example = "Thu Nov 14 00:00:00 GMT 2019", required = true, description = "")
  public LocalDate getDeliveryDate() {
    return deliveryDate;
  }

  public void setDeliveryDate(LocalDate deliveryDate) {
    this.deliveryDate = deliveryDate;
  }

  public Order startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Versorgungsbeginn
   * @return startDate
  **/
  @Schema(example = "Thu Nov 14 00:00:00 GMT 2019", description = "Versorgungsbeginn")
  public LocalDate getStartDate() {
    return startDate;
  }

  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }

  public Order endDate(LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Versorgungsende
   * @return endDate
  **/
  @Schema(example = "Sat Dec 14 00:00:00 GMT 2019", description = "Versorgungsende")
  public LocalDate getEndDate() {
    return endDate;
  }

  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }

  public Order dayOfDelivery(BigDecimal dayOfDelivery) {
    this.dayOfDelivery = dayOfDelivery;
    return this;
  }

   /**
   * Tag des Monats an dem geliefert wird -&gt; nur bei Serienbestellung!
   * @return dayOfDelivery
  **/
  @Schema(example = "14", description = "Tag des Monats an dem geliefert wird -> nur bei Serienbestellung!")
  public BigDecimal getDayOfDelivery() {
    return dayOfDelivery;
  }

  public void setDayOfDelivery(BigDecimal dayOfDelivery) {
    this.dayOfDelivery = dayOfDelivery;
  }

  public Order nextDelivery(LocalDate nextDelivery) {
    this.nextDelivery = nextDelivery;
    return this;
  }

   /**
   * Einmal abweichender nächster Liefertag bei Serienbestellung
   * @return nextDelivery
  **/
  @Schema(example = "Tue Dec 17 00:00:00 GMT 2019", description = "Einmal abweichender nächster Liefertag bei Serienbestellung")
  public LocalDate getNextDelivery() {
    return nextDelivery;
  }

  public void setNextDelivery(LocalDate nextDelivery) {
    this.nextDelivery = nextDelivery;
  }

  public Order deliveryAddress(OrderDeliveryAddress deliveryAddress) {
    this.deliveryAddress = deliveryAddress;
    return this;
  }

   /**
   * Get deliveryAddress
   * @return deliveryAddress
  **/
  @Schema(required = true, description = "")
  public OrderDeliveryAddress getDeliveryAddress() {
    return deliveryAddress;
  }

  public void setDeliveryAddress(OrderDeliveryAddress deliveryAddress) {
    this.deliveryAddress = deliveryAddress;
  }

  public Order doctorId(String doctorId) {
    this.doctorId = doctorId;
    return this;
  }

   /**
   * Voraussetzung, Alberta-Id ist bereits durch initialen Abgleich in WaWi vorhanden
   * @return doctorId
  **/
  @Schema(example = "5ab23c369d69c74b68cff5f7", required = true, description = "Voraussetzung, Alberta-Id ist bereits durch initialen Abgleich in WaWi vorhanden")
  public String getDoctorId() {
    return doctorId;
  }

  public void setDoctorId(String doctorId) {
    this.doctorId = doctorId;
  }

  public Order hospitalId(String hospitalId) {
    this.hospitalId = hospitalId;
    return this;
  }

   /**
   * Id der verordnenden Klinik (Voraussetzung, Alberta-Id ist bereits durch initialen Abgleich in WaWi vorhanden)
   * @return hospitalId
  **/
  @Schema(example = "5ab233d79d69c74b68cec670", description = "Id der verordnenden Klinik (Voraussetzung, Alberta-Id ist bereits durch initialen Abgleich in WaWi vorhanden)")
  public String getHospitalId() {
    return hospitalId;
  }

  public void setHospitalId(String hospitalId) {
    this.hospitalId = hospitalId;
  }

  public Order pharmacyId(String pharmacyId) {
    this.pharmacyId = pharmacyId;
    return this;
  }

   /**
   * Id der Apotheke bei PE/IV-Therapien (Voraussetzung, Alberta-Id ist bereits durch initialen Abgleich in WaWi vorhanden)
   * @return pharmacyId
  **/
  @Schema(example = "5ab2379c9d69c74b68cee819", description = "Id der Apotheke bei PE/IV-Therapien (Voraussetzung, Alberta-Id ist bereits durch initialen Abgleich in WaWi vorhanden)")
  public String getPharmacyId() {
    return pharmacyId;
  }

  public void setPharmacyId(String pharmacyId) {
    this.pharmacyId = pharmacyId;
  }

  public Order therapyId(BigDecimal therapyId) {
    this.therapyId = therapyId;
    return this;
  }

   /**
   * Therapie, für die der Vertrag gilt (0&#x3D; Unbekannt, 1 &#x3D; Parenterale Ernährung, 2 &#x3D; Enterale Ernährung, 3 &#x3D; Stoma, 4 &#x3D; Tracheostoma, 5 &#x3D; Inkontinenz ableitend, 6 &#x3D; Wundversorgung, 7 &#x3D; IV-Therapien, 8 &#x3D; Beatmung, 9 &#x3D; Sonstiges, 10 &#x3D; OSA, 11 &#x3D; Hustenhilfen, 12 &#x3D; Absaugung, 13 &#x3D; Patientenüberwachung, 14 &#x3D; Sauerstoff, 15 &#x3D; Inhalations- und Atemtherapie, 16 &#x3D; Lagerungshilfsmittel, 17 &#x3D; Schmerztherapie, 18 &#x3D; Immuntherapie, 19 &#x3D; Rehydration, Befeuchtung &#x3D; 20, High-Flow &#x3D; 21, Atemtherapie &#x3D; 22, Monitoring &#x3D; 23, Diagnostik &#x3D; 24, Zahnschiene &#x3D; 25, Sitzschalenbau &#x3D; 26, Orthopaedietechnik &#x3D; 27, Reha Hilfsmittel &#x3D; 28, Elektrostimulation &#x3D; 29, Diabetes &#x3D; 30, Applikationshilfen IV PE EE &#x3D; 31, Messgeraete fuer Koerperzustaende/-funktionen &#x3D; 32, PCA Schmerztherapie &#x3D; 33, Arzneimittelgabe &#x3D; 34)
   * @return therapyId
  **/
  @Schema(example = "3", required = true, description = "Therapie, für die der Vertrag gilt (0= Unbekannt, 1 = Parenterale Ernährung, 2 = Enterale Ernährung, 3 = Stoma, 4 = Tracheostoma, 5 = Inkontinenz ableitend, 6 = Wundversorgung, 7 = IV-Therapien, 8 = Beatmung, 9 = Sonstiges, 10 = OSA, 11 = Hustenhilfen, 12 = Absaugung, 13 = Patientenüberwachung, 14 = Sauerstoff, 15 = Inhalations- und Atemtherapie, 16 = Lagerungshilfsmittel, 17 = Schmerztherapie, 18 = Immuntherapie, 19 = Rehydration, Befeuchtung = 20, High-Flow = 21, Atemtherapie = 22, Monitoring = 23, Diagnostik = 24, Zahnschiene = 25, Sitzschalenbau = 26, Orthopaedietechnik = 27, Reha Hilfsmittel = 28, Elektrostimulation = 29, Diabetes = 30, Applikationshilfen IV PE EE = 31, Messgeraete fuer Koerperzustaende/-funktionen = 32, PCA Schmerztherapie = 33, Arzneimittelgabe = 34)")
  public BigDecimal getTherapyId() {
    return therapyId;
  }

  public void setTherapyId(BigDecimal therapyId) {
    this.therapyId = therapyId;
  }

  public Order therapyTypeIds(List<BigDecimal> therapyTypeIds) {
    this.therapyTypeIds = therapyTypeIds;
    return this;
  }

  public Order addTherapyTypeIdsItem(BigDecimal therapyTypeIdsItem) {
    if (this.therapyTypeIds == null) {
      this.therapyTypeIds = new ArrayList<BigDecimal>();
    }
    this.therapyTypeIds.add(therapyTypeIdsItem);
    return this;
  }

   /**
   * Get therapyTypeIds
   * @return therapyTypeIds
  **/
  @Schema(description = "")
  public List<BigDecimal> getTherapyTypeIds() {
    return therapyTypeIds;
  }

  public void setTherapyTypeIds(List<BigDecimal> therapyTypeIds) {
    this.therapyTypeIds = therapyTypeIds;
  }

  public Order isInitialCare(Boolean isInitialCare) {
    this.isInitialCare = isInitialCare;
    return this;
  }

   /**
   * true &#x3D; Erstversorgung, false &#x3D; Folgeversorgung
   * @return isInitialCare
  **/
  @Schema(example = "true", required = true, description = "true = Erstversorgung, false = Folgeversorgung")
  public Boolean isIsInitialCare() {
    return isInitialCare;
  }

  public void setIsInitialCare(Boolean isInitialCare) {
    this.isInitialCare = isInitialCare;
  }

  public Order orderedArticleLines(List<OrderedArticleLine> orderedArticleLines) {
    this.orderedArticleLines = orderedArticleLines;
    return this;
  }

  public Order addOrderedArticleLinesItem(OrderedArticleLine orderedArticleLinesItem) {
    if (this.orderedArticleLines == null) {
      this.orderedArticleLines = new ArrayList<OrderedArticleLine>();
    }
    this.orderedArticleLines.add(orderedArticleLinesItem);
    return this;
  }

   /**
   * Die einzelnen Bestellzeilen mit Artikeln
   * @return orderedArticleLines
  **/
  @Schema(description = "Die einzelnen Bestellzeilen mit Artikeln")
  public List<OrderedArticleLine> getOrderedArticleLines() {
    return orderedArticleLines;
  }

  public void setOrderedArticleLines(List<OrderedArticleLine> orderedArticleLines) {
    this.orderedArticleLines = orderedArticleLines;
  }

  public Order createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Id des erstellenden Benutzers (Voraussetzung, Alberta-Id ist bereits durch initialen Abgleich der Benutzer in WaWi vorhanden)
   * @return createdBy
  **/
  @Schema(example = "5a6ca8b6456c14307cb9ae35", description = "Id des erstellenden Benutzers (Voraussetzung, Alberta-Id ist bereits durch initialen Abgleich der Benutzer in WaWi vorhanden)")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public Order status(BigDecimal status) {
    this.status = status;
    return this;
  }

   /**
   * Status der Bestellung (-3 &#x3D; Ausstehend, 0 &#x3D; Angelegt, 1 &#x3D; Übermittelt, 2 &#x3D; Übermittlung fehlgeschlagen, 3 &#x3D; Verarbeitet, 4 &#x3D; Versandt, 5 &#x3D; Ausgeliefert, 6 &#x3D; Gelöscht, 7 &#x3D; Storniert, 8 &#x3D; Gestoppte Serienbestellung)
   * @return status
  **/
  @Schema(example = "1", description = "Status der Bestellung (-3 = Ausstehend, 0 = Angelegt, 1 = Übermittelt, 2 = Übermittlung fehlgeschlagen, 3 = Verarbeitet, 4 = Versandt, 5 = Ausgeliefert, 6 = Gelöscht, 7 = Storniert, 8 = Gestoppte Serienbestellung)")
  public BigDecimal getStatus() {
    return status;
  }

  public void setStatus(BigDecimal status) {
    this.status = status;
  }

  public Order isSeriesOrder(Boolean isSeriesOrder) {
    this.isSeriesOrder = isSeriesOrder;
    return this;
  }

   /**
   * true &#x3D; Serienbestellung (läuft automatisch über WaWi), false &#x3D; normale Einzelbestellung
   * @return isSeriesOrder
  **/
  @Schema(example = "true", description = "true = Serienbestellung (läuft automatisch über WaWi), false = normale Einzelbestellung")
  public Boolean isIsSeriesOrder() {
    return isSeriesOrder;
  }

  public void setIsSeriesOrder(Boolean isSeriesOrder) {
    this.isSeriesOrder = isSeriesOrder;
  }

  public Order annotation(String annotation) {
    this.annotation = annotation;
    return this;
  }

   /**
   * Hinweise zur Bestellung
   * @return annotation
  **/
  @Schema(example = "Das ist ein Hinweis an den Innendienst", description = "Hinweise zur Bestellung")
  public String getAnnotation() {
    return annotation;
  }

  public void setAnnotation(String annotation) {
    this.annotation = annotation;
  }

  public Order deliveryInformation(String deliveryInformation) {
    this.deliveryInformation = deliveryInformation;
    return this;
  }

   /**
   * weitere Lieferinformationen z.B. Expresslieferung
   * @return deliveryInformation
  **/
  @Schema(example = "Express", description = "weitere Lieferinformationen z.B. Expresslieferung")
  public String getDeliveryInformation() {
    return deliveryInformation;
  }

  public void setDeliveryInformation(String deliveryInformation) {
    this.deliveryInformation = deliveryInformation;
  }

  public Order deliveryNote(String deliveryNote) {
    this.deliveryNote = deliveryNote;
    return this;
  }

   /**
   * Zustellhinweis
   * @return deliveryNote
  **/
  @Schema(example = "beim Nachbarn ablegen", description = "Zustellhinweis")
  public String getDeliveryNote() {
    return deliveryNote;
  }

  public void setDeliveryNote(String deliveryNote) {
    this.deliveryNote = deliveryNote;
  }

  public Order archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

   /**
   * Kennzeichen ob Bestellung archiviert ist oder nicht
   * @return archived
  **/
  @Schema(example = "false", description = "Kennzeichen ob Bestellung archiviert ist oder nicht")
  public Boolean isArchived() {
    return archived;
  }

  public void setArchived(Boolean archived) {
    this.archived = archived;
  }

  public Order timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Der Zeitstempel der letzten Datenbankänderung
   * @return timestamp
  **/
  @Schema(description = "Der Zeitstempel der letzten Datenbankänderung")
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }

  public Order updated(OffsetDateTime updated) {
    this.updated = updated;
    return this;
  }

   /**
   * Der Zeitstempel der letzten Änderung
   * @return updated
  **/
  @Schema(description = "Der Zeitstempel der letzten Änderung")
  public OffsetDateTime getUpdated() {
    return updated;
  }

  public void setUpdated(OffsetDateTime updated) {
    this.updated = updated;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Order order = (Order) o;
    return Objects.equals(this._id, order._id) &&
        Objects.equals(this.salesId, order.salesId) &&
        Objects.equals(this.patientId, order.patientId) &&
        Objects.equals(this.rootId, order.rootId) &&
        Objects.equals(this.creationDate, order.creationDate) &&
        Objects.equals(this.deliveryDate, order.deliveryDate) &&
        Objects.equals(this.startDate, order.startDate) &&
        Objects.equals(this.endDate, order.endDate) &&
        Objects.equals(this.dayOfDelivery, order.dayOfDelivery) &&
        Objects.equals(this.nextDelivery, order.nextDelivery) &&
        Objects.equals(this.deliveryAddress, order.deliveryAddress) &&
        Objects.equals(this.doctorId, order.doctorId) &&
        Objects.equals(this.hospitalId, order.hospitalId) &&
        Objects.equals(this.pharmacyId, order.pharmacyId) &&
        Objects.equals(this.therapyId, order.therapyId) &&
        Objects.equals(this.therapyTypeIds, order.therapyTypeIds) &&
        Objects.equals(this.isInitialCare, order.isInitialCare) &&
        Objects.equals(this.orderedArticleLines, order.orderedArticleLines) &&
        Objects.equals(this.createdBy, order.createdBy) &&
        Objects.equals(this.status, order.status) &&
        Objects.equals(this.isSeriesOrder, order.isSeriesOrder) &&
        Objects.equals(this.annotation, order.annotation) &&
        Objects.equals(this.deliveryInformation, order.deliveryInformation) &&
        Objects.equals(this.deliveryNote, order.deliveryNote) &&
        Objects.equals(this.archived, order.archived) &&
        Objects.equals(this.timestamp, order.timestamp) &&
        Objects.equals(this.updated, order.updated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_id, salesId, patientId, rootId, creationDate, deliveryDate, startDate, endDate, dayOfDelivery, nextDelivery, deliveryAddress, doctorId, hospitalId, pharmacyId, therapyId, therapyTypeIds, isInitialCare, orderedArticleLines, createdBy, status, isSeriesOrder, annotation, deliveryInformation, deliveryNote, archived, timestamp, updated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Order {\n");
    
    sb.append("    _id: ").append(toIndentedString(_id)).append("\n");
    sb.append("    salesId: ").append(toIndentedString(salesId)).append("\n");
    sb.append("    patientId: ").append(toIndentedString(patientId)).append("\n");
    sb.append("    rootId: ").append(toIndentedString(rootId)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    deliveryDate: ").append(toIndentedString(deliveryDate)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    dayOfDelivery: ").append(toIndentedString(dayOfDelivery)).append("\n");
    sb.append("    nextDelivery: ").append(toIndentedString(nextDelivery)).append("\n");
    sb.append("    deliveryAddress: ").append(toIndentedString(deliveryAddress)).append("\n");
    sb.append("    doctorId: ").append(toIndentedString(doctorId)).append("\n");
    sb.append("    hospitalId: ").append(toIndentedString(hospitalId)).append("\n");
    sb.append("    pharmacyId: ").append(toIndentedString(pharmacyId)).append("\n");
    sb.append("    therapyId: ").append(toIndentedString(therapyId)).append("\n");
    sb.append("    therapyTypeIds: ").append(toIndentedString(therapyTypeIds)).append("\n");
    sb.append("    isInitialCare: ").append(toIndentedString(isInitialCare)).append("\n");
    sb.append("    orderedArticleLines: ").append(toIndentedString(orderedArticleLines)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    isSeriesOrder: ").append(toIndentedString(isSeriesOrder)).append("\n");
    sb.append("    annotation: ").append(toIndentedString(annotation)).append("\n");
    sb.append("    deliveryInformation: ").append(toIndentedString(deliveryInformation)).append("\n");
    sb.append("    deliveryNote: ").append(toIndentedString(deliveryNote)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
