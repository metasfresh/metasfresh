/*
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.19.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package de.metas.camel.externalsystems.ebay.api.invoker;

import java.util.Map;
import java.util.List;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-07-20T14:45:55.981728+02:00[Europe/Berlin]")
public class ApiException extends Exception
{
	private int code = 0;
	private Map<String, List<String>> responseHeaders = null;
	private String responseBody = null;

	public ApiException()
	{
	}

	public ApiException(Throwable throwable)
	{
		super(throwable);
	}

	public ApiException(String message)
	{
		super(message);
	}

	public ApiException(String message, Throwable throwable, int code, Map<String, List<String>> responseHeaders, String responseBody)
	{
		super(message, throwable);
		this.code = code;
		this.responseHeaders = responseHeaders;
		this.responseBody = responseBody;
	}

	public ApiException(String message, int code, Map<String, List<String>> responseHeaders, String responseBody)
	{
		this(message, (Throwable)null, code, responseHeaders, responseBody);
	}

	public ApiException(String message, Throwable throwable, int code, Map<String, List<String>> responseHeaders)
	{
		this(message, throwable, code, responseHeaders, null);
	}

	public ApiException(int code, Map<String, List<String>> responseHeaders, String responseBody)
	{
		this((String)null, (Throwable)null, code, responseHeaders, responseBody);
	}

	public ApiException(int code, String message)
	{
		super(message);
		this.code = code;
	}

	public ApiException(int code, String message, Map<String, List<String>> responseHeaders, String responseBody)
	{
		this(code, message);
		this.responseHeaders = responseHeaders;
		this.responseBody = responseBody;
	}

	/**
	 * Get the HTTP status code.
	 *
	 * @return HTTP status code
	 */
	public int getCode()
	{
		return code;
	}

	/**
	 * Get the HTTP response headers.
	 *
	 * @return A map of list of string
	 */
	public Map<String, List<String>> getResponseHeaders()
	{
		return responseHeaders;
	}

	/**
	 * Get the HTTP response body.
	 *
	 * @return Response body in the form of string
	 */
	public String getResponseBody()
	{
		return responseBody;
	}
}
