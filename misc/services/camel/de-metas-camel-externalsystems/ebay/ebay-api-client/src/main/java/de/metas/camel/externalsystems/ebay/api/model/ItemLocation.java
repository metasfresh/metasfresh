/*
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.19.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package de.metas.camel.externalsystems.ebay.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * This type describes the physical location of an order.
 */
@ApiModel(description = "This type describes the physical location of an order.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-07-20T14:45:55.981728+02:00[Europe/Berlin]")
public class ItemLocation
{
	public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
	@SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
	private String countryCode;

	public static final String SERIALIZED_NAME_LOCATION = "location";
	@SerializedName(SERIALIZED_NAME_LOCATION)
	private String location;

	public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
	@SerializedName(SERIALIZED_NAME_POSTAL_CODE)
	private String postalCode;

	public ItemLocation countryCode(String countryCode)
	{

		this.countryCode = countryCode;
		return this;
	}

	/**
	 * The two-letter ISO 3166 code representing the country of the address. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CountryCodeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
	 * 
	 * @return countryCode
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "The two-letter ISO 3166 code representing the country of the address. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CountryCodeEnum'>eBay API documentation</a>")

	public String getCountryCode()
	{
		return countryCode;
	}

	public void setCountryCode(String countryCode)
	{
		this.countryCode = countryCode;
	}

	public ItemLocation location(String location)
	{

		this.location = location;
		return this;
	}

	/**
	 * Indicates the geographical location of the item (along with the value in the countryCode field). This field provides city, province, state, or similar information.
	 * 
	 * @return location
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "Indicates the geographical location of the item (along with the value in the countryCode field). This field provides city, province, state, or similar information.")

	public String getLocation()
	{
		return location;
	}

	public void setLocation(String location)
	{
		this.location = location;
	}

	public ItemLocation postalCode(String postalCode)
	{

		this.postalCode = postalCode;
		return this;
	}

	/**
	 * The postal code of the address.
	 * 
	 * @return postalCode
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "The postal code of the address.")

	public String getPostalCode()
	{
		return postalCode;
	}

	public void setPostalCode(String postalCode)
	{
		this.postalCode = postalCode;
	}

	@Override
	public boolean equals(Object o)
	{
		if (this == o)
		{
			return true;
		}
		if (o == null || getClass() != o.getClass())
		{
			return false;
		}
		ItemLocation itemLocation = (ItemLocation)o;
		return Objects.equals(this.countryCode, itemLocation.countryCode) &&
				Objects.equals(this.location, itemLocation.location) &&
				Objects.equals(this.postalCode, itemLocation.postalCode);
	}

	@Override
	public int hashCode()
	{
		return Objects.hash(countryCode, location, postalCode);
	}

	@Override
	public String toString()
	{
		StringBuilder sb = new StringBuilder();
		sb.append("class ItemLocation {\n");
		sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
		sb.append("    location: ").append(toIndentedString(location)).append("\n");
		sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(Object o)
	{
		if (o == null)
		{
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
