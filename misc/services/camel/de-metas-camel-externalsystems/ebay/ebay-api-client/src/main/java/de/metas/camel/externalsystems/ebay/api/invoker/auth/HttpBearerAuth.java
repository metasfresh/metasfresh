/*
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.19.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package de.metas.camel.externalsystems.ebay.api.invoker.auth;

import de.metas.camel.externalsystems.ebay.api.invoker.Pair;

import java.util.Map;
import java.util.List;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-07-20T14:45:55.981728+02:00[Europe/Berlin]")
public class HttpBearerAuth implements Authentication
{
	private final String scheme;
	private String bearerToken;

	public HttpBearerAuth(String scheme)
	{
		this.scheme = scheme;
	}

	/**
	 * Gets the token, which together with the scheme, will be sent as the value of the Authorization header.
	 *
	 * @return The bearer token
	 */
	public String getBearerToken()
	{
		return bearerToken;
	}

	/**
	 * Sets the token, which together with the scheme, will be sent as the value of the Authorization header.
	 *
	 * @param bearerToken The bearer token to send in the Authorization header
	 */
	public void setBearerToken(String bearerToken)
	{
		this.bearerToken = bearerToken;
	}

	@Override
	public void applyToParams(List<Pair> queryParams, Map<String, String> headerParams, Map<String, String> cookieParams)
	{
		if (bearerToken == null)
		{
			return;
		}

		headerParams.put("Authorization", (scheme != null ? upperCaseBearer(scheme) + " " : "") + bearerToken);
	}

	private static String upperCaseBearer(String scheme)
	{
		return ("bearer".equalsIgnoreCase(scheme)) ? "Bearer" : scheme;
	}
}
