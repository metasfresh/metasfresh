/*
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.19.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package de.metas.camel.externalsystems.ebay.api.invoker.auth;

import de.metas.camel.externalsystems.ebay.api.invoker.Pair;

import java.util.Map;
import java.util.List;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-07-20T14:45:55.981728+02:00[Europe/Berlin]")
public class ApiKeyAuth implements Authentication
{
	private final String location;
	private final String paramName;

	private String apiKey;
	private String apiKeyPrefix;

	public ApiKeyAuth(String location, String paramName)
	{
		this.location = location;
		this.paramName = paramName;
	}

	public String getLocation()
	{
		return location;
	}

	public String getParamName()
	{
		return paramName;
	}

	public String getApiKey()
	{
		return apiKey;
	}

	public void setApiKey(String apiKey)
	{
		this.apiKey = apiKey;
	}

	public String getApiKeyPrefix()
	{
		return apiKeyPrefix;
	}

	public void setApiKeyPrefix(String apiKeyPrefix)
	{
		this.apiKeyPrefix = apiKeyPrefix;
	}

	@Override
	public void applyToParams(List<Pair> queryParams, Map<String, String> headerParams, Map<String, String> cookieParams)
	{
		if (apiKey == null)
		{
			return;
		}
		String value;
		if (apiKeyPrefix != null)
		{
			value = apiKeyPrefix + " " + apiKey;
		}
		else
		{
			value = apiKey;
		}
		if ("query".equals(location))
		{
			queryParams.add(new Pair(paramName, value));
		}
		else if ("header".equals(location))
		{
			headerParams.put(paramName, value);
		}
		else if ("cookie".equals(location))
		{
			cookieParams.put(paramName, value);
		}
	}
}
