<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.metas.camel.externalsystems</groupId>
        <artifactId>de-metas-camel-externalsystems</artifactId>
        <version>10.0.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>de-metas-camel-externalsystems-core</artifactId>
    <version>10.0.0</version>
    <properties>
        <java.version>17</java.version>
        <spring-boot.version>2.7.11</spring-boot.version>
        <camel.version>3.14.7</camel.version>
        <smooks.version>1.7.1</smooks.version>
        <jackson.version>2.14.1</jackson.version>
        <!--
            3.8.0 is currently the latest and greatest. Spring boot declares some 2.x version that
            see http://docs.spring.io/spring-boot/docs/1.2.3.RELEASE/reference/htmlsingle/#howto-customize-dependency-versions-with-maven
        -->
        <assertj.version>3.19.0</assertj.version>

        <metasfresh-common.version>10.0.0</metasfresh-common.version>
        <metasfresh.version>10.0.0</metasfresh.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-bom</artifactId>
                <version>${camel.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <scope>test</scope>
                <version>${assertj.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>de.metas.camel.externalsystems</groupId>
            <artifactId>de-metas-camel-alberta-camelroutes</artifactId>
            <version>10.0.0</version>
            <!-- Avoid startup failure
                   org.springframework.context.ApplicationContextException: Failed to start bean 'documentationPluginsBootstrapper'; nested exception is java.lang.NullPointerException: Cannot invoke "org.springframework.web.servlet.mvc.condition.PatternsRequestCondition.getPatterns()" because "this.condition" is null
                Please revise this exclusion when the rest of MF also runs with java-17 or later
            -->
            <exclusions>
                <exclusion>
                    <artifactId>springfox-boot-starter</artifactId>
                    <groupId>io.springfox</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>springfox-enum-plugin</artifactId>
                    <groupId>de.pentabyte</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>de.metas.camel.externalsystems</groupId>
            <artifactId>de-metas-camel-externalsystems-common</artifactId>
            <version>10.0.0</version>
            <!-- Avoid startup failure
                   org.springframework.context.ApplicationContextException: Failed to start bean 'documentationPluginsBootstrapper'; nested exception is java.lang.NullPointerException: Cannot invoke "org.springframework.web.servlet.mvc.condition.PatternsRequestCondition.getPatterns()" because "this.condition" is null
                Please revise this exclusion when the rest of MF also runs with java-17 or later
            -->
            <exclusions>
                <exclusion>
                    <artifactId>springfox-boot-starter</artifactId>
                    <groupId>io.springfox</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>springfox-enum-plugin</artifactId>
                    <groupId>de.pentabyte</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>de.metas.camel.externalsystems</groupId>
            <artifactId>de-metas-camel-shopware6</artifactId>
            <version>10.0.0</version>
        </dependency>

        <dependency>
            <groupId>de.metas.camel.externalsystems</groupId>
            <artifactId>de-metas-camel-ebay-camelroutes</artifactId>
            <version>10.0.0</version>
        </dependency>

        <dependency>
            <groupId>de.metas.camel.externalsystems</groupId>
            <artifactId>de-metas-camel-rabbitmq</artifactId>
            <version>10.0.0</version>
        </dependency>
        
        <dependency>
            <groupId>de.metas.camel.externalsystems</groupId>
            <artifactId>de-metas-camel-woocommerce</artifactId>
            <version>10.0.0</version>
        </dependency>
        <dependency>
            <groupId>de.metas.camel.externalsystems</groupId>
            <artifactId>de-metas-camel-leichundmehl</artifactId>
            <version>10.0.0</version>
        </dependency>
        <dependency>
            <groupId>de.metas.camel.externalsystems</groupId>
            <artifactId>de-metas-camel-grssignum</artifactId>
            <version>10.0.0</version>
        </dependency>

        <dependency>
            <groupId>de.metas.camel.externalsystems</groupId>
            <artifactId>de-metas-camel-sap-file-import</artifactId>
            <version>10.0.0</version>
        </dependency>

        <dependency>
            <groupId>de.metas.camel.externalsystems</groupId>
            <artifactId>de-metas-camel-sap</artifactId>
            <version>10.0.0</version>
        </dependency>

        <dependency>
            <groupId>de.metas.camel.externalsystems</groupId>
            <artifactId>de-metas-camel-metasfresh</artifactId>
            <version>10.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.adekia.exchange</groupId>
            <artifactId>exchange-routes</artifactId>
            <version>10.0.0</version>
        </dependency>

        <dependency>
            <groupId>de.metas.camel.externalsystems</groupId>
            <artifactId>de-metas-camel-printingclient</artifactId>
            <version>10.0.0</version>
        </dependency>


        <dependency>
            <groupId>de.metas.camel.externalsystems</groupId>
            <artifactId>de-metas-camel-pcm-file-import</artifactId>
            <version>10.0.0</version>
        </dependency>
        
        <dependency>
            <groupId>de.metas.common.externalreference</groupId>
            <artifactId>de-metas-common-externalreference</artifactId>
            <version>${metasfresh-common.version}</version>
            <!-- Avoid startup failure
             org.springframework.context.ApplicationContextException: Failed to start bean 'documentationPluginsBootstrapper'; nested exception is java.lang.NullPointerException: Cannot invoke "org.springframework.web.servlet.mvc.condition.PatternsRequestCondition.getPatterns()" because "this.condition" is null
             Please revise this exclusion when the rest of MF also runs with java-17 or later
            -->
            <exclusions>
                <exclusion>
                    <artifactId>springfox-boot-starter</artifactId>
                    <groupId>io.springfox</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>springfox-enum-plugin</artifactId>
                    <groupId>de.pentabyte</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>de.metas.common.externalsystem</groupId>
            <artifactId>de-metas-common-externalsystem</artifactId>
            <version>${metasfresh-common.version}</version>
            <!-- Avoid startup failure
             org.springframework.context.ApplicationContextException: Failed to start bean 'documentationPluginsBootstrapper'; nested exception is java.lang.NullPointerException: Cannot invoke "org.springframework.web.servlet.mvc.condition.PatternsRequestCondition.getPatterns()" because "this.condition" is null
             Please revise this exclusion when the rest of MF also runs with java-17 or later
            -->
            <exclusions>
                <exclusion>
                    <artifactId>springfox-boot-starter</artifactId>
                    <groupId>io.springfox</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>springfox-enum-plugin</artifactId>
                    <groupId>de.pentabyte</groupId>
                </exclusion>
            </exclusions>            
        </dependency>
        <dependency>
            <groupId>de.metas.common.bpartner</groupId>
            <artifactId>de-metas-common-bpartner</artifactId>
            <version>${metasfresh-common.version}</version>
            <!-- Avoid startup failure
                   org.springframework.context.ApplicationContextException: Failed to start bean 'documentationPluginsBootstrapper'; nested exception is java.lang.NullPointerException: Cannot invoke "org.springframework.web.servlet.mvc.condition.PatternsRequestCondition.getPatterns()" because "this.condition" is null
                Please revise this exclusion when the rest of MF also runs with java-17 or later
            -->            
            <exclusions>
                <exclusion>
                    <artifactId>springfox-boot-starter</artifactId>
                    <groupId>io.springfox</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>springfox-enum-plugin</artifactId>
                    <groupId>de.pentabyte</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jackson</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Camel -->
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-servlet-starter</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring-javaconfig</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-endpointdsl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-http-starter</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-rabbitmq-starter</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <!-- testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.7.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.7.0</version>
            <scope>test</scope>
        </dependency>

        <!-- thx to https://stackoverflow.com/a/64384746/1012103 -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-commons</artifactId>
            <version>1.9.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>1.9.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-engine</artifactId>
            <version>1.9.1</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
					<execution>
						<id>spring-boot-webui-api-repackage</id>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<executable>true</executable>

							<!-- this also provides the super-jar to the successive docker build 
								Note that the ${docker.build.directory} property is set by the prepare-docker 
								profile that is activated by the presence of the scr/main/docker folder -->
							<outputDirectory>target/uber</outputDirectory>
						</configuration>
					</execution>
                    <execution>
                        <id>spring-boot-externalsystems-build-info</id>
                        <goals>
                            <goal>build-info</goal> <!-- create build-info.properties; thanks to https://docs.spring.io/spring-boot/docs/current/reference/html/howto-build.html#howto-build-info -->
                        </goals>
                        <configuration>
                            <additionalProperties>
                                <jenkinsBuildNo>${env.BUILD_NUMBER}</jenkinsBuildNo>
                                <jenkinsBuildTag>${env.BUILD_TAG}</jenkinsBuildTag>
                                <jenkinsBuildUrl>${env.BUILD_URL}</jenkinsBuildUrl>
                                <jenkinsJobName>${env.JOB_NAME}</jenkinsJobName>
                            </additionalProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Allows the example to be run via 'mvn camel:run' -->
            <plugin>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-maven-plugin</artifactId>
                <version>${camel.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                </configuration>
            </plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>de.metas.camel.externalsystems.core.ESBCamelApplication</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
	
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <configuration>
                    <to>
                        <!-- we expect those environment variables to be set from the outside world -->
                        <!-- without specifying the tag in the image name, jib will push "latest", thx https://github.com/GoogleContainerTools/jib/issues/2237#issuecomment-575967019 -->
                        <image>docker.metasfresh.com/metasfresh/de-metas-camel-externalsystems:${env.MF_VERSION_DOCKERIZED}
                        </image>
                        <tags>
                            <tag>${env.BRANCH_NAME_DOCKERIZED}_LATEST</tag>
                        </tags>
                        <auth>
                            <!-- when running on jenkins, these credentials are set from there; see Jenkinsfile -->
                            <!--suppress UnresolvedMavenProperty -->
                            <username>${env.DOCKER_PUSH_REGISTRY_USERNAME}</username>
                            <!--suppress UnresolvedMavenProperty -->
                            <password>${env.DOCKER_PUSH_REGISTRY_PASSWORD}</password>
                        </auth>
                    </to>
                    <from>
                        <!-- specify the exact base image for a reproducible build-->
                        <image>eclipse-temurin:17.0.5_8-jdk</image>
                        <auth>
                            <!-- when running on jenkins, these credentials are set from there; see Jenkinsfile -->
                            <!-- we authenticate on pulls to avoid the rate limit -->
                            <!--suppress UnresolvedMavenProperty -->
                            <username>${env.DOCKERHUB_REGISTRY_USERNAME}</username>
                            <!--suppress UnresolvedMavenProperty -->
                            <password>${env.DOCKERHUB_REGISTRY_PASSWORD}</password>
                        </auth>
                    </from>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
