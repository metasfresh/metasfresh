/*
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.19.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.metas.camel.externalsystems.ebay.api.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.metas.camel.externalsystems.ebay.api.model.Address;
import de.metas.camel.externalsystems.ebay.api.model.PickupStep;
import de.metas.camel.externalsystems.ebay.api.model.ShippingStep;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for FulfillmentStartInstruction
 */
public class FulfillmentStartInstructionTest {
    private final FulfillmentStartInstruction model = new FulfillmentStartInstruction();

    /**
     * Model tests for FulfillmentStartInstruction
     */
    @Test
    public void testFulfillmentStartInstruction() {
        // TODO: test FulfillmentStartInstruction
    }

    /**
     * Test the property 'ebaySupportedFulfillment'
     */
    @Test
    public void ebaySupportedFulfillmentTest() {
        // TODO: test ebaySupportedFulfillment
    }

    /**
     * Test the property 'finalDestinationAddress'
     */
    @Test
    public void finalDestinationAddressTest() {
        // TODO: test finalDestinationAddress
    }

    /**
     * Test the property 'fulfillmentInstructionsType'
     */
    @Test
    public void fulfillmentInstructionsTypeTest() {
        // TODO: test fulfillmentInstructionsType
    }

    /**
     * Test the property 'maxEstimatedDeliveryDate'
     */
    @Test
    public void maxEstimatedDeliveryDateTest() {
        // TODO: test maxEstimatedDeliveryDate
    }

    /**
     * Test the property 'minEstimatedDeliveryDate'
     */
    @Test
    public void minEstimatedDeliveryDateTest() {
        // TODO: test minEstimatedDeliveryDate
    }

    /**
     * Test the property 'pickupStep'
     */
    @Test
    public void pickupStepTest() {
        // TODO: test pickupStep
    }

    /**
     * Test the property 'shippingStep'
     */
    @Test
    public void shippingStepTest() {
        // TODO: test shippingStep
    }

}
