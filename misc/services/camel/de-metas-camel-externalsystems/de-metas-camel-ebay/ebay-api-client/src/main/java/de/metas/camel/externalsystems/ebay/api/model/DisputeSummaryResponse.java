/*
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.19.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package de.metas.camel.externalsystems.ebay.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.metas.camel.externalsystems.ebay.api.model.PaymentDisputeSummary;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * This type defines the base response payload of the getPaymentDisputeSummaries method. Each payment dispute that matches the input criteria is returned under the paymentDisputeSummaries array.
 */
@ApiModel(description = "This type defines the base response payload of the getPaymentDisputeSummaries method. Each payment dispute that matches the input criteria is returned under the paymentDisputeSummaries array.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-07-20T14:45:55.981728+02:00[Europe/Berlin]")
public class DisputeSummaryResponse
{
	public static final String SERIALIZED_NAME_HREF = "href";
	@SerializedName(SERIALIZED_NAME_HREF)
	private String href;

	public static final String SERIALIZED_NAME_LIMIT = "limit";
	@SerializedName(SERIALIZED_NAME_LIMIT)
	private Integer limit;

	public static final String SERIALIZED_NAME_NEXT = "next";
	@SerializedName(SERIALIZED_NAME_NEXT)
	private String next;

	public static final String SERIALIZED_NAME_OFFSET = "offset";
	@SerializedName(SERIALIZED_NAME_OFFSET)
	private Integer offset;

	public static final String SERIALIZED_NAME_PAYMENT_DISPUTE_SUMMARIES = "paymentDisputeSummaries";
	@SerializedName(SERIALIZED_NAME_PAYMENT_DISPUTE_SUMMARIES)
	private List<PaymentDisputeSummary> paymentDisputeSummaries = null;

	public static final String SERIALIZED_NAME_PREV = "prev";
	@SerializedName(SERIALIZED_NAME_PREV)
	private String prev;

	public static final String SERIALIZED_NAME_TOTAL = "total";
	@SerializedName(SERIALIZED_NAME_TOTAL)
	private Integer total;

	public DisputeSummaryResponse href(String href)
	{

		this.href = href;
		return this;
	}

	/**
	 * The URI of the getPaymentDisputeSummaries call request that produced the current page of the result set.
	 * 
	 * @return href
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "The URI of the getPaymentDisputeSummaries call request that produced the current page of the result set.")

	public String getHref()
	{
		return href;
	}

	public void setHref(String href)
	{
		this.href = href;
	}

	public DisputeSummaryResponse limit(Integer limit)
	{

		this.limit = limit;
		return this;
	}

	/**
	 * This value shows the maximum number of payment disputes that will appear on one page of the result set. The limit value can be passed in as a query parameter in the request, or if it is not used, it defaults to 200. If the value in the total field exceeds this limit value, there are multiple pages in the current result set. Min: 1; Max: 200; Default: 200
	 * 
	 * @return limit
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "This value shows the maximum number of payment disputes that will appear on one page of the result set. The limit value can be passed in as a query parameter in the request, or if it is not used, it defaults to 200. If the value in the total field exceeds this limit value, there are multiple pages in the current result set. Min: 1; Max: 200; Default: 200")

	public Integer getLimit()
	{
		return limit;
	}

	public void setLimit(Integer limit)
	{
		this.limit = limit;
	}

	public DisputeSummaryResponse next(String next)
	{

		this.next = next;
		return this;
	}

	/**
	 * The getPaymentDisputeSummaries call URI to use if you wish to view the next page of the result set. For example, the following URI returns records 11 thru 20 from the collection of payment disputes: path/payment_dispute_summary?limit&#x3D;10&amp;amp;offset&#x3D;10 This field is only returned if there is a next page of results to view based on the current input criteria.
	 * 
	 * @return next
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "The getPaymentDisputeSummaries call URI to use if you wish to view the next page of the result set. For example, the following URI returns records 11 thru 20 from the collection of payment disputes: path/payment_dispute_summary?limit=10&amp;offset=10 This field is only returned if there is a next page of results to view based on the current input criteria.")

	public String getNext()
	{
		return next;
	}

	public void setNext(String next)
	{
		this.next = next;
	}

	public DisputeSummaryResponse offset(Integer offset)
	{

		this.offset = offset;
		return this;
	}

	/**
	 * This integer value indicates the number of payment disputes skipped before listing the first payment dispute from the result set. The offset value can be passed in as a query parameter in the request, or if it is not used, it defaults to 0 and the first payment dispute of the result set is shown at the top of the response.
	 * 
	 * @return offset
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "This integer value indicates the number of payment disputes skipped before listing the first payment dispute from the result set. The offset value can be passed in as a query parameter in the request, or if it is not used, it defaults to 0 and the first payment dispute of the result set is shown at the top of the response.")

	public Integer getOffset()
	{
		return offset;
	}

	public void setOffset(Integer offset)
	{
		this.offset = offset;
	}

	public DisputeSummaryResponse paymentDisputeSummaries(List<PaymentDisputeSummary> paymentDisputeSummaries)
	{

		this.paymentDisputeSummaries = paymentDisputeSummaries;
		return this;
	}

	public DisputeSummaryResponse addPaymentDisputeSummariesItem(PaymentDisputeSummary paymentDisputeSummariesItem)
	{
		if (this.paymentDisputeSummaries == null)
		{
			this.paymentDisputeSummaries = new ArrayList<>();
		}
		this.paymentDisputeSummaries.add(paymentDisputeSummariesItem);
		return this;
	}

	/**
	 * Each payment dispute that matches the input criteria is returned under this array. If no payment disputes are found, an empty array is returned.
	 * 
	 * @return paymentDisputeSummaries
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "Each payment dispute that matches the input criteria is returned under this array. If no payment disputes are found, an empty array is returned.")

	public List<PaymentDisputeSummary> getPaymentDisputeSummaries()
	{
		return paymentDisputeSummaries;
	}

	public void setPaymentDisputeSummaries(List<PaymentDisputeSummary> paymentDisputeSummaries)
	{
		this.paymentDisputeSummaries = paymentDisputeSummaries;
	}

	public DisputeSummaryResponse prev(String prev)
	{

		this.prev = prev;
		return this;
	}

	/**
	 * The getPaymentDisputeSummaries call URI to use if you wish to view the previous page of the result set. For example, the following URI returns records 1 thru 10 from the collection of payment disputes: path/payment_dispute_summary?limit&#x3D;10&amp;amp;offset&#x3D;0 This field is only returned if there is a previous page of results to view based on the current input criteria.
	 * 
	 * @return prev
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "The getPaymentDisputeSummaries call URI to use if you wish to view the previous page of the result set. For example, the following URI returns records 1 thru 10 from the collection of payment disputes: path/payment_dispute_summary?limit=10&amp;offset=0 This field is only returned if there is a previous page of results to view based on the current input criteria.")

	public String getPrev()
	{
		return prev;
	}

	public void setPrev(String prev)
	{
		this.prev = prev;
	}

	public DisputeSummaryResponse total(Integer total)
	{

		this.total = total;
		return this;
	}

	/**
	 * This integer value is the total number of payment disputes that matched the input criteria. If the total number of entries exceeds the value that was set for limit in the request payload, you will have to make multiple API calls to see all pages of the results set. This field is returned even if it is 0.
	 * 
	 * @return total
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "This integer value is the total number of payment disputes that matched the input criteria. If the total number of entries exceeds the value that was set for limit in the request payload, you will have to make multiple API calls to see all pages of the results set. This field is returned even if it is 0.")

	public Integer getTotal()
	{
		return total;
	}

	public void setTotal(Integer total)
	{
		this.total = total;
	}

	@Override
	public boolean equals(Object o)
	{
		if (this == o)
		{
			return true;
		}
		if (o == null || getClass() != o.getClass())
		{
			return false;
		}
		DisputeSummaryResponse disputeSummaryResponse = (DisputeSummaryResponse)o;
		return Objects.equals(this.href, disputeSummaryResponse.href) &&
				Objects.equals(this.limit, disputeSummaryResponse.limit) &&
				Objects.equals(this.next, disputeSummaryResponse.next) &&
				Objects.equals(this.offset, disputeSummaryResponse.offset) &&
				Objects.equals(this.paymentDisputeSummaries, disputeSummaryResponse.paymentDisputeSummaries) &&
				Objects.equals(this.prev, disputeSummaryResponse.prev) &&
				Objects.equals(this.total, disputeSummaryResponse.total);
	}

	@Override
	public int hashCode()
	{
		return Objects.hash(href, limit, next, offset, paymentDisputeSummaries, prev, total);
	}

	@Override
	public String toString()
	{
		StringBuilder sb = new StringBuilder();
		sb.append("class DisputeSummaryResponse {\n");
		sb.append("    href: ").append(toIndentedString(href)).append("\n");
		sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
		sb.append("    next: ").append(toIndentedString(next)).append("\n");
		sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
		sb.append("    paymentDisputeSummaries: ").append(toIndentedString(paymentDisputeSummaries)).append("\n");
		sb.append("    prev: ").append(toIndentedString(prev)).append("\n");
		sb.append("    total: ").append(toIndentedString(total)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(Object o)
	{
		if (o == null)
		{
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
