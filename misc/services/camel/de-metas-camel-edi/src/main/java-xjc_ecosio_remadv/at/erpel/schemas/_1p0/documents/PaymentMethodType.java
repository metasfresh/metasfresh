//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package at.erpel.schemas._1p0.documents;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PaymentMethodType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="PaymentMethodType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element ref="{http://erpel.at/schemas/1p0/documents}Comment" minOccurs="0"/>
 *         <choice>
 *           <element ref="{http://erpel.at/schemas/1p0/documents}UniversalBankTransaction"/>
 *           <element ref="{http://erpel.at/schemas/1p0/documents}NoPayment"/>
 *           <element ref="{http://erpel.at/schemas/1p0/documents}DirectDebit"/>
 *           <element ref="{http://erpel.at/schemas/1p0/documents}SEPADirectDebit"/>
 *         </choice>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PaymentMethodType", propOrder = {
    "comment",
    "universalBankTransaction",
    "noPayment",
    "directDebit",
    "sepaDirectDebit"
})
public class PaymentMethodType {

    /**
     * Free-text comment which may be specified for a payment method.
     * 
     */
    @XmlElement(name = "Comment")
    protected String comment;
    /**
     * Used to denote details about a bank transaction, via which this invoice has to be paid.
     * 
     */
    @XmlElement(name = "UniversalBankTransaction")
    protected UniversalBankTransactionType universalBankTransaction;
    /**
     * Indicates that no payment takes place as a result of this invoice.
     * 
     */
    @XmlElement(name = "NoPayment")
    protected NoPaymentType noPayment;
    /**
     * Indicates that a direct debit will take place as a result of this invoice.
     * 
     */
    @XmlElement(name = "DirectDebit")
    protected DirectDebitType directDebit;
    /**
     * Used to denote details about a SEPA direct debit, via which this invoice has to be paid.
     * 
     */
    @XmlElement(name = "SEPADirectDebit")
    protected SEPADirectDebitType sepaDirectDebit;

    /**
     * Free-text comment which may be specified for a payment method.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getComment() {
        return comment;
    }

    /**
     * Sets the value of the comment property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getComment()
     */
    public void setComment(String value) {
        this.comment = value;
    }

    /**
     * Used to denote details about a bank transaction, via which this invoice has to be paid.
     * 
     * @return
     *     possible object is
     *     {@link UniversalBankTransactionType }
     *     
     */
    public UniversalBankTransactionType getUniversalBankTransaction() {
        return universalBankTransaction;
    }

    /**
     * Sets the value of the universalBankTransaction property.
     * 
     * @param value
     *     allowed object is
     *     {@link UniversalBankTransactionType }
     *     
     * @see #getUniversalBankTransaction()
     */
    public void setUniversalBankTransaction(UniversalBankTransactionType value) {
        this.universalBankTransaction = value;
    }

    /**
     * Indicates that no payment takes place as a result of this invoice.
     * 
     * @return
     *     possible object is
     *     {@link NoPaymentType }
     *     
     */
    public NoPaymentType getNoPayment() {
        return noPayment;
    }

    /**
     * Sets the value of the noPayment property.
     * 
     * @param value
     *     allowed object is
     *     {@link NoPaymentType }
     *     
     * @see #getNoPayment()
     */
    public void setNoPayment(NoPaymentType value) {
        this.noPayment = value;
    }

    /**
     * Indicates that a direct debit will take place as a result of this invoice.
     * 
     * @return
     *     possible object is
     *     {@link DirectDebitType }
     *     
     */
    public DirectDebitType getDirectDebit() {
        return directDebit;
    }

    /**
     * Sets the value of the directDebit property.
     * 
     * @param value
     *     allowed object is
     *     {@link DirectDebitType }
     *     
     * @see #getDirectDebit()
     */
    public void setDirectDebit(DirectDebitType value) {
        this.directDebit = value;
    }

    /**
     * Used to denote details about a SEPA direct debit, via which this invoice has to be paid.
     * 
     * @return
     *     possible object is
     *     {@link SEPADirectDebitType }
     *     
     */
    public SEPADirectDebitType getSEPADirectDebit() {
        return sepaDirectDebit;
    }

    /**
     * Sets the value of the sepaDirectDebit property.
     * 
     * @param value
     *     allowed object is
     *     {@link SEPADirectDebitType }
     *     
     * @see #getSEPADirectDebit()
     */
    public void setSEPADirectDebit(SEPADirectDebitType value) {
        this.sepaDirectDebit = value;
    }

}
