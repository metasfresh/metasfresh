//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package at.erpel.schemas._1p0.documents.extensions.edifact;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Document type name in Erpel standard form.
 * 
 * <p>Java class for DocumentTypeType</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * <pre>{@code
 * <simpleType name="DocumentTypeType">
 *   <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     <enumeration value="Offer"/>
 *     <enumeration value="RequestForQuote"/>
 *     <enumeration value="Order"/>
 *     <enumeration value="OrderConfirmation"/>
 *     <enumeration value="DispatchAdvice"/>
 *     <enumeration value="ReceiptAdvice"/>
 *     <enumeration value="Invoice"/>
 *     <enumeration value="InvoiceList"/>
 *     <enumeration value="InvoiceForAdvancePayment"/>
 *     <enumeration value="InvoiceForPartialDelivery"/>
 *     <enumeration value="InvoiceFinalSettlement"/>
 *     <enumeration value="InvoiceSubsequentCredit"/>
 *     <enumeration value="InvoiceCreditMemo"/>
 *     <enumeration value="InvoiceSubsequentDebit"/>
 *     <enumeration value="InvoiceSelfBilling"/>
 *     <enumeration value="InvoiceProForma"/>
 *     <enumeration value="TransportInstruction"/>
 *     <enumeration value="TransportStatus"/>
 *     <enumeration value="Contrl"/>
 *     <enumeration value="ContractReference"/>
 *     <enumeration value="Project"/>
 *     <enumeration value="ReturnDelivery"/>
 *     <enumeration value="StockReference"/>
 *   </restriction>
 * </simpleType>
 * }</pre>
 * 
 */
@XmlType(name = "DocumentTypeType")
@XmlEnum
public enum DocumentTypeType {

    @XmlEnumValue("Offer")
    OFFER("Offer"),
    @XmlEnumValue("RequestForQuote")
    REQUEST_FOR_QUOTE("RequestForQuote"),
    @XmlEnumValue("Order")
    ORDER("Order"),
    @XmlEnumValue("OrderConfirmation")
    ORDER_CONFIRMATION("OrderConfirmation"),
    @XmlEnumValue("DispatchAdvice")
    DISPATCH_ADVICE("DispatchAdvice"),
    @XmlEnumValue("ReceiptAdvice")
    RECEIPT_ADVICE("ReceiptAdvice"),
    @XmlEnumValue("Invoice")
    INVOICE("Invoice"),
    @XmlEnumValue("InvoiceList")
    INVOICE_LIST("InvoiceList"),
    @XmlEnumValue("InvoiceForAdvancePayment")
    INVOICE_FOR_ADVANCE_PAYMENT("InvoiceForAdvancePayment"),
    @XmlEnumValue("InvoiceForPartialDelivery")
    INVOICE_FOR_PARTIAL_DELIVERY("InvoiceForPartialDelivery"),
    @XmlEnumValue("InvoiceFinalSettlement")
    INVOICE_FINAL_SETTLEMENT("InvoiceFinalSettlement"),
    @XmlEnumValue("InvoiceSubsequentCredit")
    INVOICE_SUBSEQUENT_CREDIT("InvoiceSubsequentCredit"),
    @XmlEnumValue("InvoiceCreditMemo")
    INVOICE_CREDIT_MEMO("InvoiceCreditMemo"),
    @XmlEnumValue("InvoiceSubsequentDebit")
    INVOICE_SUBSEQUENT_DEBIT("InvoiceSubsequentDebit"),
    @XmlEnumValue("InvoiceSelfBilling")
    INVOICE_SELF_BILLING("InvoiceSelfBilling"),
    @XmlEnumValue("InvoiceProForma")
    INVOICE_PRO_FORMA("InvoiceProForma"),
    @XmlEnumValue("TransportInstruction")
    TRANSPORT_INSTRUCTION("TransportInstruction"),
    @XmlEnumValue("TransportStatus")
    TRANSPORT_STATUS("TransportStatus"),
    @XmlEnumValue("Contrl")
    CONTRL("Contrl"),
    @XmlEnumValue("ContractReference")
    CONTRACT_REFERENCE("ContractReference"),
    @XmlEnumValue("Project")
    PROJECT("Project"),
    @XmlEnumValue("ReturnDelivery")
    RETURN_DELIVERY("ReturnDelivery"),
    @XmlEnumValue("StockReference")
    STOCK_REFERENCE("StockReference");
    private final String value;

    DocumentTypeType(String v) {
        value = v;
    }

    /**
     * Gets the value associated to the enum constant.
     * 
     * @return
     *     The value linked to the enum.
     */
    public String value() {
        return value;
    }

    /**
     * Gets the enum associated to the value passed as parameter.
     * 
     * @param v
     *     The value to get the enum from.
     * @return
     *     The enum which corresponds to the value, if it exists.
     * @throws IllegalArgumentException
     *     If no value matches in the enum declaration.
     */
    public static DocumentTypeType fromValue(String v) {
        for (DocumentTypeType c: DocumentTypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
