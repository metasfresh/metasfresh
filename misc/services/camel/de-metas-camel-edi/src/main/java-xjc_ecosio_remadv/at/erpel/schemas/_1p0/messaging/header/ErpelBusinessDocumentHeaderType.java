//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package at.erpel.schemas._1p0.messaging.header;

import javax.xml.datatype.XMLGregorianCalendar;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ErpelBusinessDocumentHeaderType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="ErpelBusinessDocumentHeaderType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element ref="{http://erpel.at/schemas/1p0/messaging/header}Sender" minOccurs="0"/>
 *         <element ref="{http://erpel.at/schemas/1p0/messaging/header}Receiver" minOccurs="0"/>
 *         <element ref="{http://erpel.at/schemas/1p0/messaging/header}MessageReceivedAt" minOccurs="0"/>
 *         <element ref="{http://erpel.at/schemas/1p0/messaging/header}SignatureVerification" minOccurs="0"/>
 *         <element ref="{http://erpel.at/schemas/1p0/messaging/header}InterchangeHeader"/>
 *       </sequence>
 *       <attribute ref="{http://erpel.at/schemas/1p0/messaging/header}ID"/>
 *       <attribute ref="{http://erpel.at/schemas/1p0/messaging/header}References"/>
 *       <attribute ref="{http://erpel.at/schemas/1p0/messaging/header}TestIndicator"/>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ErpelBusinessDocumentHeaderType", propOrder = {
    "sender",
    "receiver",
    "messageReceivedAt",
    "signatureVerification",
    "interchangeHeader"
})
public class ErpelBusinessDocumentHeaderType {

    /**
     * Deprecated. Please use InterchangeHeader/Sender/id.
     * 
     */
    @XmlElement(name = "Sender")
    protected String sender;
    /**
     * Deprecated. Please use InterchangeHeader/Receiver/id.
     * 
     */
    @XmlElement(name = "Receiver")
    protected String receiver;
    /**
     * Contains the date and time when the message was received at a specific location.
     * 
     */
    @XmlElement(name = "MessageReceivedAt")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar messageReceivedAt;
    /**
     * Contains details about the digital signature, which may be applied to an ERPEL message. Deprecated.
     * 
     */
    @XmlElement(name = "SignatureVerification")
    protected SignatureVerificationType signatureVerification;
    /**
     * Contains all routing information. May include EDIFACT-specific data.
     * 
     */
    @XmlElement(name = "InterchangeHeader", required = true)
    protected InterchangeHeaderType interchangeHeader;
    /**
     * The ID represents the unique number of the message.
     * 
     */
    @XmlAttribute(name = "ID", namespace = "http://erpel.at/schemas/1p0/messaging/header")
    protected String id;
    /**
     * This segment contains references related to the message.
     * 
     */
    @XmlAttribute(name = "References", namespace = "http://erpel.at/schemas/1p0/messaging/header")
    protected String references;
    /**
     * Flag indicating whether the message is a test message or not.
     * 
     */
    @XmlAttribute(name = "TestIndicator", namespace = "http://erpel.at/schemas/1p0/messaging/header")
    protected Boolean testIndicator;

    /**
     * Deprecated. Please use InterchangeHeader/Sender/id.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSender() {
        return sender;
    }

    /**
     * Sets the value of the sender property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getSender()
     */
    public void setSender(String value) {
        this.sender = value;
    }

    /**
     * Deprecated. Please use InterchangeHeader/Receiver/id.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReceiver() {
        return receiver;
    }

    /**
     * Sets the value of the receiver property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getReceiver()
     */
    public void setReceiver(String value) {
        this.receiver = value;
    }

    /**
     * Contains the date and time when the message was received at a specific location.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getMessageReceivedAt() {
        return messageReceivedAt;
    }

    /**
     * Sets the value of the messageReceivedAt property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     * @see #getMessageReceivedAt()
     */
    public void setMessageReceivedAt(XMLGregorianCalendar value) {
        this.messageReceivedAt = value;
    }

    /**
     * Contains details about the digital signature, which may be applied to an ERPEL message. Deprecated.
     * 
     * @return
     *     possible object is
     *     {@link SignatureVerificationType }
     *     
     */
    public SignatureVerificationType getSignatureVerification() {
        return signatureVerification;
    }

    /**
     * Sets the value of the signatureVerification property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignatureVerificationType }
     *     
     * @see #getSignatureVerification()
     */
    public void setSignatureVerification(SignatureVerificationType value) {
        this.signatureVerification = value;
    }

    /**
     * Contains all routing information. May include EDIFACT-specific data.
     * 
     * @return
     *     possible object is
     *     {@link InterchangeHeaderType }
     *     
     */
    public InterchangeHeaderType getInterchangeHeader() {
        return interchangeHeader;
    }

    /**
     * Sets the value of the interchangeHeader property.
     * 
     * @param value
     *     allowed object is
     *     {@link InterchangeHeaderType }
     *     
     * @see #getInterchangeHeader()
     */
    public void setInterchangeHeader(InterchangeHeaderType value) {
        this.interchangeHeader = value;
    }

    /**
     * The ID represents the unique number of the message.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getID() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getID()
     */
    public void setID(String value) {
        this.id = value;
    }

    /**
     * This segment contains references related to the message.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReferences() {
        return references;
    }

    /**
     * Sets the value of the references property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getReferences()
     */
    public void setReferences(String value) {
        this.references = value;
    }

    /**
     * Flag indicating whether the message is a test message or not.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTestIndicator() {
        return testIndicator;
    }

    /**
     * Sets the value of the testIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     * @see #isTestIndicator()
     */
    public void setTestIndicator(Boolean value) {
        this.testIndicator = value;
    }

}
