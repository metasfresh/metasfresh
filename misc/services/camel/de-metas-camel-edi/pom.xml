<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.metas.camel</groupId>
        <artifactId>de-metas-camel</artifactId>
        <version>10.0.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>de-metas-camel-edi</artifactId>
    <version>10.0.0</version>
    <properties>
        <java.version>17</java.version>
        <spring-boot.version>3.4.3</spring-boot.version>
        <camel.version>4.10.2</camel.version>
        <guava.version>33.4.5-jre</guava.version>
        <smooks.edifact.cartridge.version>2.1.0</smooks.edifact.cartridge.version>
        <jackson.version>2.18.3</jackson.version>
        <lombok.version>1.18.36</lombok.version>
        <org.apache.poi.version>5.4.0</org.apache.poi.version>

        <jaxb.api.version>2.3.1</jaxb.api.version>
        <jaxb.core.version>2.3.0.1</jaxb.core.version>
        <jaxb.impl.version>2.3.8</jaxb.impl.version>

        <jaxb.inhouse.v1.packageName>de.metas.edi.esb.jaxb.metasfreshinhousev1</jaxb.inhouse.v1.packageName>
        <jaxb.inhouse.v2.packageName>de.metas.edi.esb.jaxb.metasfreshinhousev2</jaxb.inhouse.v2.packageName>
        <jaxb.orders.packageName>de.metas.edi.esb.jaxb.stepcom.orders</jaxb.orders.packageName>
        <jaxb.invoic.packageName>de.metas.edi.esb.jaxb.stepcom.invoic</jaxb.invoic.packageName>
        <jaxb.desadv.packageName>de.metas.edi.esb.jaxb.stepcom.desadv</jaxb.desadv.packageName>
        <metasfresh-common.version>10.0.0</metasfresh-common.version>
        <!--
            3.27.2 is currently the latest and greatest. Spring boot declares some 2.x version that
            see http://docs.spring.io/spring-boot/docs/1.2.3.RELEASE/reference/htmlsingle/#howto-customize-dependency-versions-with-maven
        -->
        <assertj.version>3.27.3</assertj.version>
        <xmlunit-assertj3.version>2.10.0</xmlunit-assertj3.version>

        <!-- https://github.com/codecentric/spring-boot-admin -->
        <!--        <spring-boot-admin.version>2.1.5</spring-boot-admin.version>-->

        <!-- with 5.4.2 we can't run junit tests from eclipse ("no tests found") -->
        <junit-jupiter.version>5.12.1</junit-jupiter.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-bom</artifactId>
                <version>${camel.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <scope>test</scope>
                <version>${assertj.version}</version>
            </dependency>

            <dependency>
                <groupId>org.xmlunit</groupId>
                <artifactId>xmlunit-assertj3</artifactId>
                <version>${xmlunit-assertj3.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-http</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>de.metas.common.rest_api</groupId>
            <artifactId>de-metas-common-rest_api</artifactId>
            <version>${metasfresh-common.version}</version>
            <!-- Avoid startup failure
             org.springframework.context.ApplicationContextException: Failed to start bean 'documentationPluginsBootstrapper'; nested exception is java.lang.NullPointerException: Cannot invoke "org.springframework.web.servlet.mvc.condition.PatternsRequestCondition.getPatterns()" because "this.condition" is null
            -->
            <exclusions>
                <exclusion>
                    <artifactId>springfox-boot-starter</artifactId>
                    <groupId>io.springfox</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>springfox-enum-plugin</artifactId>
                    <groupId>de.pentabyte</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.woodstox</groupId>
            <artifactId>woodstox-core</artifactId>
            <version>7.1.0</version>
        </dependency>

        <!-- Camel -->
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-endpointdsl</artifactId>
        </dependency>

        <!-- ADDITIONAL DEPENDENCIES for our use cases -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring-rabbitmq</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-jaxb-starter</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>4.0.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-ftp-starter</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-jackson-starter</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-jacksonxml-starter</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-smooks-starter</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <dependency>
            <groupId>org.smooks.cartridges</groupId>
            <artifactId>smooks-templating-cartridge</artifactId>
            <version>2.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.smooks.cartridges</groupId>
            <artifactId>smooks-fixed-length-cartridge</artifactId>
            <version>2.0.3</version>
        </dependency>

        <dependency>
            <groupId>org.smooks.cartridges.edi</groupId>
            <artifactId>smooks-edifact-cartridge</artifactId>
            <version>${smooks.edifact.cartridge.version}</version>
        </dependency>
        <dependency>
            <groupId>org.smooks.cartridges.edi</groupId>
            <artifactId>d01b-edifact-binding</artifactId>
            <version>${smooks.edifact.cartridge.version}</version>
        </dependency>
        <dependency>
            <groupId>org.smooks.cartridges.edi</groupId>
            <artifactId>edifact-schemas</artifactId>
            <version>${smooks.edifact.cartridge.version}</version>
            <classifier>d01b</classifier>
        </dependency>
        
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.17.0</version>
        </dependency>

        <!-- Apache POI: required for Excel importing support. -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${org.apache.poi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${org.apache.poi.version}</version>
        </dependency>

        <!-- Logging  -->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback-encoder.version}</version>
        </dependency>

        <!-- testing -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-junit5</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.xmlunit</groupId>
            <artifactId>xmlunit-assertj3</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-rabbitmq</artifactId>
            <version>3.14.7</version>
            <scope>compile</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <!-- we *also* need the normal main jar to be used in app
                    so don't replace the normal jar, but create the executable jar with this classifier -->
                    <classifier>exec</classifier>

                    <executable>true</executable>
                    <mainClass>de.metas.edi.esb.ESBCamelApplication</mainClass>

                </configuration>
            </plugin>

            <!-- Allows the example to be run via 'mvn camel:run' -->
            <plugin>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-maven-plugin</artifactId>
                <version>${camel.version}</version>
            </plugin>

            <plugin>
                <!-- plugin found at https://github.com/highsource/jaxb-tools -->
                <groupId>org.jvnet.jaxb</groupId>
                <artifactId>jaxb-maven-plugin</artifactId>
                <version>4.0.8</version>
                <executions>
                    <execution>
                        <id>xjc-schema-metasfresh-inhouse-v2</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <schemaDirectory>src/main/xsd/metasfreshinhousev2</schemaDirectory>
                            <generatePackage>${jaxb.inhouse.v2.packageName}</generatePackage>
                            <generateDirectory>${project.basedir}/src/main/java-xjc_metasfreshinhousev2</generateDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>xjc-stepcom-orders</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <schemaDirectory>src/main/xsd/stepcom/orders</schemaDirectory>
                            <generatePackage>${jaxb.orders.packageName}</generatePackage>
                            <generateDirectory>${project.basedir}/src/main/java-xjc_stepcom_orders</generateDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>xjc-stepcom-desadv</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <schemaDirectory>src/main/xsd/stepcom/desadv</schemaDirectory>
                            <generatePackage>${jaxb.desadv.packageName}</generatePackage>
                            <generateDirectory>${project.basedir}/src/main/java-xjc_stepcom_desadv</generateDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>xjc-stepcom-invoic</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <schemaDirectory>src/main/xsd/stepcom/invoic</schemaDirectory>
                            <generatePackage>${jaxb.invoic.packageName}</generatePackage>
                            <generateDirectory>${project.basedir}/src/main/java-xjc_stepcom_invoic</generateDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>xjc-schema-remadv</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <bindingDirectory>src/main/xsd/ecosio/ERPEL1p0</bindingDirectory>
                            <schemaDirectory>src/main/xsd/ecosio/ERPEL1p0</schemaDirectory>
                            <!-- don't try to enforce one package like this (unless you know what you are doing ofc):
                            <generatePackage>${jaxb.ecosio.remadv.packageName}</generatePackage>

                            because it will end with "Two declarations cause a collision in the ObjectFactory class."
                            -->
                            <generateDirectory>${project.basedir}/src/main/java-xjc_ecosio_remadv</generateDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>xjc-schema-metasfresh-inhouse-v1</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <schemaDirectory>src/main/xsd/metasfreshinhousev1</schemaDirectory>
                            <generatePackage>${jaxb.inhouse.v1.packageName}</generatePackage>
                            <generateDirectory>${project.basedir}/src/main/java-xjc_metasfreshinhousev1</generateDirectory>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>jakarta.xml.bind</groupId>
                        <artifactId>jakarta.xml.bind-api</artifactId>
                        <version>4.0.2</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <!-- Adds src/main/java-xsd as additional source folder (if the directory
                    is present) -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>add-sources-java-xjc</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/java-xjc_metasfreshinhousev1</source>
                                <source>src/main/java-xjc_metasfreshinhousev2</source>
                                <source>src/main/java-xjc_stepcom_orders</source>
                                <source>src/main/java-xjc_stepcom_desadv</source>
                                <source>src/main/java-xjc_stepcom_invoic</source>
                                <source>src/main/java-xjc_ecosio_remadv</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!-- Create tests JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
