<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ #%L
  ~ procurement-webui-backend
  ~ %%
  ~ Copyright (C) 2022 metas GmbH
  ~ %%
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as
  ~ published by the Free Software Foundation, either version 2 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public
  ~ License along with this program. If not, see
  ~ <http://www.gnu.org/licenses/gpl-2.0.html>.
  ~ #L%
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>de.metas.parent.general</artifactId>
        <groupId>de.metas</groupId>
        <version>10.0.0</version>
        <relativePath>../../../parent-pom/pom.xml</relativePath>
    </parent>

    <groupId>de.metas.procurement</groupId>
    <artifactId>procurement-webui-backend</artifactId>
    <name>procurement-webui-backend</name>
    <description>Rest API for webui that is connected to metasfresh and allows the user to log report the availability of goods which he would like to sell.</description>

    <!-- FRESH-271: we need an explicit version here, otherwise versions-maven-plugin
        can't set it to another version it -->
    <version>10.0.0</version>

    <properties>
        <java.version>14</java.version>
        <maven.compiler.source>14</maven.compiler.source>
        <maven.compiler.target>14</maven.compiler.target>
        <spring-boot.version>2.4.1</spring-boot.version>
        <metasfresh.version>10.0.0</metasfresh.version>
        <metasfresh-common.version>10.0.0</metasfresh-common.version>
        <!-- NOTE: versions below 5.7.0 does not support junit 4.13.1
        and when running tests fails with "Failed to parse version of junit:junit: 4.13.1" exception -->
        <junit-jupiter.version>5.7.0</junit-jupiter.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Import dependency management from Spring Boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <!-- some projects fail when building with java-17 and lombok-1.18.18 -->
                <!-- <version>1.18.18</version> -->
                <version>1.18.22</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>de.metas.common.procurement</groupId>
            <artifactId>de-metas-common-procurement</artifactId>
            <version>${metasfresh-common.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.threeten</groupId>
            <artifactId>threeten-extra</artifactId>
            <version>1.5.0</version>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
            <version>${springfox-swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox-swagger.version}</version>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>14</source>
                    <target>14</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <configuration>
                    <!-- disabling because it's a pain in the rear, and i can't disable e.g. just dependency-conversion -->
                    <skip>true</skip>
                </configuration>
            </plugin>


            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <configuration>
                    <to>
                        <!-- we expect those environment variables to be set from the outside world -->
                        <!-- without specifying the tag in the image name, jib will push "latest", thx https://github.com/GoogleContainerTools/jib/issues/2237#issuecomment-575967019 -->
                        <image>docker.metasfresh.com/metasfresh/procurement-webui-backend:${env.MF_VERSION_DOCKERIZED}
                        </image>
                        <tags>
                            <tag>${env.BRANCH_NAME_DOCKERIZED}_LATEST</tag>
                        </tags>
                        <auth>
                            <!-- when running on jenkins, these credentials are set from there; see Jenkinsfile -->
                            <username>${env.DOCKER_PUSH_REGISTRY_USERNAME}</username>
                            <password>${env.DOCKER_PUSH_REGISTRY_PASSWORD}</password>
                        </auth>
                    </to>
                    <from>
                        <!-- specify the exact base image for a reproducible build-->
                        <image>adoptopenjdk:14.0.2_8-jdk-hotspot</image>
                        <auth>
                            <!-- when running on jenkins, these credentials are set from there; see Jenkinsfile -->
                            <!-- we authenticate on pulls to avoid the rate limit -->
                            <username>${env.DOCKERHUB_REGISTRY_USERNAME}</username>
                            <password>${env.DOCKERHUB_REGISTRY_PASSWORD}</password>
                        </auth>
                    </from>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
