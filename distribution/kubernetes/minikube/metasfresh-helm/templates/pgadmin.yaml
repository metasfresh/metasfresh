apiVersion: v1
kind: Service
metadata:
  name: metasfresh-{{ .Release.Name }}-pgadmin
  namespace: {{ .Release.Namespace }}
  labels:
    app: metasfresh-{{ .Release.Name }}-pgadmin
spec:
  selector:
    app: metasfresh-{{ .Release.Name }}-pgadmin
  ports:
    - protocol: TCP
      port: {{ .Values.pgadmin.port.pgadmin }}
      targetPort: {{ .Values.pgadmin.port.pgadmin }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: metasfresh-{{ .Release.Name }}-pgadmin
  namespace: {{ .Release.Namespace }}
  labels:
    app: metasfresh-{{ .Release.Name }}-pgadmin
spec:
  selector:
    matchLabels:
      app: metasfresh-{{ .Release.Name }}-pgadmin
  replicas: 1
  template:
    metadata:
      labels:
        app: metasfresh-{{ .Release.Name }}-pgadmin
    spec:
      containers:
      - name: metasfresh-{{ .Release.Name }}-pgadmin
        image: {{ .Values.pgadmin.image }}
        ports:
        - containerPort: {{ .Values.pgadmin.port.pgadmin }}
        env:
        - name: PGADMIN_DEFAULT_EMAIL
          valueFrom:
            secretKeyRef:
              name: metasfresh-{{ .Release.Name }}-pgadmin-secret
              key: default-email
        - name: PGADMIN_DEFAULT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: metasfresh-{{ .Release.Name }}-pgadmin-secret
              key: default-password
        volumeMounts:
        - mountPath: /var/lib/pgadmin
          name: data
      initContainers:
        - name: take-data-dir-ownership
          image: busybox
          command: ['sh', '-c', 'chown -R 5050:5050 /var/lib/pgadmin']
          volumeMounts:
          - mountPath: /var/lib/pgadmin
            name: data
      volumes:
      - name: data
        hostPath:
          path: /volumes/{{ .Release.Namespace }}/pgadmin
          type: DirectoryOrCreate
        