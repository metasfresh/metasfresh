
package de.metas.shipper.gateway.dpd.generated;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;

import java.util.List;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.2
 * Generated source version: 3.0
 * 
 */
@WebService(name = "ShipmentService_3_2", targetNamespace = "http://dpd.com/common/service/ShipmentService/3.2")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ShipmentService32 {


    /**
     * Stores up to 30 shipments and creates corresponding shipment documents.
     * 
     *                 Sample request:
     *                 <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://dpd.com/common/service/types/Authentication/2.0" xmlns:ns1="http://dpd.com/common/service/types/ShipmentService/3.2">
     *                 <soapenv:Header>
     *                 <ns:authentication>
     *                 <delisId><your delisId></delisId>
     *                 <authToken><your authToken></authToken>
     *                 <messageLanguage>de_DE</messageLanguage>
     *                 </ns:authentication>
     *                 </soapenv:Header>
     *                 <soapenv:Body>
     *                 <ns1:storeOrders>
     *                 <printOptions>
     *                 <printerLanguage>PDF</printerLanguage>
     *                 <paperFormat>A4</paperFormat>
     *                 </printOptions>
     *                 <order>
     *                 <generalShipmentData>
     *                 <identificationNumber>77777</identificationNumber>
     *                 <sendingDepot>0163</sendingDepot>
     *                 <product>CL</product>
     *                 <mpsCompleteDelivery>0</mpsCompleteDelivery>
     *                 <sender>
     *                 <name1>Abholer1</name1>
     *                 <street>Strasse 1</street>
     *                 <country>DE</country>
     *                 <zipCode>11111</zipCode>
     *                 <city>Ort1</city>
     *                 <customerNumber>12345679</customerNumber>
     *                 </sender>
     *                 <recipient>
     *                 <name1>Test-Empfaenger</name1>
     *                 <street>Test-Strasse</street>
     *                 <state>BY</state>
     *                 <country>DE</country>
     *                 <zipCode>63741</zipCode>
     *                 <city>Aschaffenburg</city>
     *                 </recipient>
     *                 </generalShipmentData>
     *                 <parcels>
     *                 <parcelLabelNumber></parcelLabelNumber>
     *                 </parcels>
     *                 <productAndServiceData>
     *                 <orderType>consignment</orderType>
     *                 </productAndServiceData>
     *                 </order>
     *                 </ns1:storeOrders>
     *                 </soapenv:Body>
     *                 </soapenv:Envelope>
     *             
     * 
     * @param order
     * @param printOptions
     * @return
     *     returns de.metas.shipper.gateway.dpd.generated.StoreOrdersResponseType
     * @throws AuthenticationFaultMsg
     */
    @WebMethod(action = "http://dpd.com/common/service/ShipmentService/3.2/storeOrders")
    @WebResult(name = "orderResult", targetNamespace = "")
    @RequestWrapper(localName = "storeOrders", targetNamespace = "http://dpd.com/common/service/types/ShipmentService/3.2", className = "de.metas.shipper.gateway.dpd.generated.StoreOrders")
    @ResponseWrapper(localName = "storeOrdersResponse", targetNamespace = "http://dpd.com/common/service/types/ShipmentService/3.2", className = "de.metas.shipper.gateway.dpd.generated.StoreOrdersResponse")
    public StoreOrdersResponseType storeOrders(
        @WebParam(name = "printOptions", targetNamespace = "")
        PrintOptions printOptions,
        @WebParam(name = "order", targetNamespace = "")
        List<ShipmentServiceData> order)
        throws AuthenticationFaultMsg
    ;

}
