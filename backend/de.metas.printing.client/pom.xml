<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>de.metas.parent</artifactId>
		<groupId>de.metas</groupId>
		<version>10.0.0</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<groupId>de.metas.printing</groupId>
	<artifactId>de.metas.printing.client</artifactId>

	<properties>
		<!-- note that the scripts are not part of the rollout-package.
		     they are just present when a developer runs mg migrate from their local dev-station -->
		<migration-sql-basedir>99-de.metas.printing.esb.client</migration-sql-basedir>
		<metasfresh.version>[1,10.0.0]</metasfresh.version>
	</properties>

	<dependencies>

		<dependency>
			<groupId>de.metas.printing</groupId>
			<artifactId>de.metas.printing.api</artifactId>
			<version>${metasfresh.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents.client5</groupId>
			<artifactId>httpclient5</artifactId>
		</dependency>

		<dependency>
			<groupId>net.dev.java</groupId>
			<artifactId>pdf-renderer</artifactId>
			<version>0.9.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<!-- Create tests JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- NOTE: We don't need a groupId specification because the group is 
					org.apache.maven.plugins ...which is assumed by default. -->
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<index>true</index>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<mainClass>de.metas.printing.client.PrintingClientStandaloneService</mainClass>
						</manifest>
						<manifestEntries>
							<!-- required when we run this jar as an applet. 
							     See http://docs.oracle.com/javase/7/docs/technotes/guides/jweb/manifest.html#permissions -->
							<!--
							metas-ts: commented out because right now we are not interested in applets, but it took me a lot of effort to get there and i would like to keep it around for future reference.
							<Permissions>all-permissions</Permissions>
							-->
							<Implementation-Version>${project.version}-${env.BUILD_NUMBER}</Implementation-Version>
						</manifestEntries>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> 
						<phase>package</phase> 
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		<!-- 
		metas-ts: commented out because right now we are not interested in signing code, but it took me a lot of effort to get there and i would like to keep it around for future reference.
			<plugin>
				sign the uber-jar that we just created with the maven-assembly-plugin 
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jarsigner-plugin</artifactId>
				<executions>
					<execution>
						<id>sign</id>
						<phase>package</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<keystore>${keystore.path}</keystore>
					<alias>${keystore.alias}</alias>
					<storepass>${keystore.store.password}</storepass>
					<keypass>${keystore.key.password}</keypass>
					<archive>${project.build.directory}/${project.artifactId}-${project.version}-jar-with-dependencies.jar</archive>
				</configuration>
			</plugin>
		-->
		</plugins>
	</build>
</project>