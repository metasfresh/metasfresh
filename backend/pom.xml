<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>de.metas.parent.general</artifactId>
        <groupId>de.metas</groupId>
        <version>10.0.0</version>
        <relativePath>../misc/parent-pom/pom.xml</relativePath>
    </parent>

    <artifactId>de.metas.parent</artifactId>

    <!-- FRESH-271: we need an explicit version here, otherwise versions-maven-plugin
        can't set it to another version -->
    <version>10.0.0</version>

    <packaging>pom</packaging>

    <description>metasfresh parent pom with common settings to be used by all metasfreseh maven projects</description>

    <!-- TODO: consider removing jasperreports.version and dependencyManagement
        from this pom. It will instead be handled by adempiereJasper-parent -->

    <properties>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <poi.version>3.15</poi.version>
        <zxing.version>2.3.0</zxing.version>

        <spring-boot.version>2.4.3</spring-boot.version>
        <lucene.version>8.6.2</lucene.version>

        <!-- Note that we need spring in de.metas.report.jasper.client and ...jasper.server.base for some reason. -->
        <!-- For versions info, see https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-dependency-versions.html -->
        <spring.version>5.3.4</spring.version>

        <!-- jackson-dataformat-xml:2.9.9 has two different version in its dependency tree -->
        <woodstox.stax2-api.version>4.1</woodstox.stax2-api.version>

        <!-- woodstox is in the dependency tree of both cxf-core and jackson-dataformat-xml -->
        <woodstox.version>5.1.0</woodstox.version>

        <license.name>gpl_v2</license.name>

        <acceptance.reports.dir>target/acceptance-reports</acceptance.reports.dir>

    </properties>

    <!-- FRESH-271 by declaring those three reactor poms as modules of this
        parent pom, we can set all the versions from cmdline, using mvn org.codehaus.mojo:versions-maven-plugin:2.1:revert
        -DnewVersion=tst -f de.metas.parent\pom.xml Note that we use version 2.1
        because of http://stackoverflow.com/questions/29995139/maven-versions-maven-plugin-versions-plugin-2-2 -->

    <modules>
        <module>de.metas.migration</module>
        <module>de.metas.scripts.rollout</module>

        <module>de.metas.monitoring</module>

        <module>de.metas.adempiere.adempiere</module>

        <module>de.metas.manufacturing</module>
        <module>de.metas.manufacturing.rest-api</module>

        <module>de.metas.adempiere.libero.liberoHR</module>

        <module>de.metas.acct.base</module>

        <module>de.metas.async</module>

        <module>de.metas.aggregation</module>

        <module>de.metas.global_qrcode.api</module>
        <module>de.metas.global_qrcode.services</module>
        <module>de.metas.business</module>

        <module>de.metas.business.rest-api</module>
        <module>de.metas.business.rest-api-impl</module>

        <module>de.metas.workflow.rest-api</module>

        <module>de.metas.report</module>

        <module>de.metas.device.adempiere</module>
        <module>de.metas.device.api</module>
        <module>de.metas.device.scales</module>
        <module>de.metas.device.webui</module>

        <module>de.metas.dimension</module> <!-- task 08681 -->

        <module>de.metas.document.archive.api</module>
        <module>de.metas.document.archive</module>

        <module>de.metas.document.refid</module>
        <module>de.metas.dunning</module>

        <module>de.metas.dunning_gateway.api</module>
        <module>de.metas.dunning_gateway.spi</module>

        <module>de.metas.dlm</module>

        <module>de.metas.edi</module>

        <module>de.metas.elasticsearch</module>

        <module>de.metas.banking</module>
        <module>de.metas.contracts</module>

        <module>de.metas.externalreference</module>
        <module>de.metas.externalsystem</module>

        <!-- cucumber has its own build script -->
        <!-- <module>de.metas.cucumber</module> -->

        <module>de.metas.invoice_gateway.api</module>
        <module>de.metas.invoice_gateway.spi</module>

        <module>de.metas.inbound.mail</module>

        <module>de.metas.fresh</module>

        <module>de.metas.marketing</module>

        <module>de.metas.materialtracking</module>

        <module>de.metas.material</module>

        <module>de.metas.handlingunits.base</module>
        <module>de.metas.handlingunits.webui</module>

        <module>de.metas.payment.esr</module>
        <module>de.metas.payment.sepa</module>
        <module>de.metas.payment.paypal</module>
        <module>de.metas.payment.revolut</module>

        <module>de.metas.printing</module>
        <module>de.metas.printing.rest-api-impl</module>
        <module>de.metas.printing.common</module>
        <module>de.metas.printing.client</module>

        <module>de.metas.procurement.base</module>

        <module>de.metas.purchasecandidate.base</module>
        <module>de.metas.salescandidate.base</module>

        <module>de.metas.rfq</module>
        <module>de.metas.storage</module>

        <module>de.metas.swat</module>

        <module>de.metas.serviceprovider</module>

        <module>de.metas.shipper.gateway.commons</module>
        <module>de.metas.shipper.gateway.spi</module>
        <module>de.metas.shipper.gateway.go</module>
        <module>de.metas.shipper.gateway.derkurier</module>
        <module>de.metas.shipper.gateway.dhl</module>
        <module>de.metas.shipper.gateway.dpd</module>

        <module>de.metas.util</module>
        <module>de.metas.util.web</module>

        <module>de.metas.vendor.gateway.api</module>

        <module>de.metas.datev</module>

        <module>de.metas.vertical.creditscore</module>

        <module>de.metas.vertical.healthcare.alberta</module>

        <module>de.metas.vertical.pharma</module>
        <module>de.metas.vertical.pharma.msv3.commons</module>
        <module>de.metas.vertical.pharma.msv3.schema.v1</module>
        <module>de.metas.vertical.pharma.msv3.schema.v2</module>
        <module>de.metas.vertical.pharma.msv3.server</module>
        <module>de.metas.vertical.pharma.msv3.server-peer</module>
        <module>de.metas.vertical.pharma.msv3.server-peer-metasfresh</module>
        <module>de.metas.vertical.pharma.vendor.gateway.msv3</module>

        <module>de.metas.vertical.pharma.securpharm</module>

        <module>vertical-healthcare_ch</module>
        <module>de.metas.issue.tracking.github</module>
        <module>de.metas.issue.tracking.everhour</module>

        <module>de.metas.ui.web.base</module>

        <module>de.metas.servicerepair.base</module>
        <module>de.metas.servicerepair.webui</module>

        <module>de.metas.picking.rest-api</module>
        <module>de.metas.distribution.rest-api</module>

        <module>metasfresh-webui-api</module>
        <module>metasfresh-dist</module>

        <module>de-metas-salesorder</module>
    </modules>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>com.mchange</groupId>
                <artifactId>c3p0</artifactId>
                <version>0.9.5.5</version>
            </dependency>

            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>42.3.3</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Import dependency management from Spring Boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>net.sf.jasperreports</groupId>
                <artifactId>jasperreports</artifactId>
                <version>${jasperreports.version}</version>
            </dependency>

            <!-- manage the versions of lucene because we need to exclude them from
                jasperreports and then want to explicitly add them -->
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-queryparser</artifactId>
                <version>${lucene.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-analyzers-common</artifactId>
                <version>${lucene.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-core</artifactId>
                <version>${lucene.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-queries</artifactId>
                <version>${lucene.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>core</artifactId>
                <version>${zxing.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>javase</artifactId>
                <version>${zxing.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.6</version>
            </dependency>

            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.2</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>

            <!-- Thx for the two fonts to http://ansuz.sooke.bc.ca/page/fonts ^^ -->
            <dependency>
                <groupId>jp.osdn.ocra</groupId>
                <artifactId>jp.osdn.ocra</artifactId>
                <version>0.2</version>
            </dependency>
            <dependency>
                <groupId>jp.osdn.ocrb</groupId>
                <artifactId>jp.osdn.ocrb</artifactId>
                <version>0.2.1</version>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.1.0</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>1.2</version>
            </dependency>

            <!-- Concordion for acceptance testing -->
            <dependency>
                <groupId>org.concordion</groupId>
                <artifactId>concordion</artifactId>
                <version>1.5.1</version>
            </dependency>

            <!-- Swagger -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>


            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.3.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.10</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.8</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>2.5.4</version>
                </plugin>

                <plugin>
                    <!-- we need a version that supports encrypted passwords in the settings.xml -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jarsigner-plugin</artifactId>
                    <version>1.3.2</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>2.4.2</version>
                </plugin>

                <!--This plugin's configuration is used to store Eclipse m2e settings
                    only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.codehaus.mojo
                                        </groupId>
                                        <artifactId>
                                            jasperreports-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [1.0-beta-2,)
                                        </versionRange>
                                        <goals>
                                            <goal>compile-reports</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.apache.maven.plugins
                                        </groupId>
                                        <artifactId>
                                            maven-dependency-plugin
                                        </artifactId>
                                        <versionRange>
                                            [2.4,)
                                        </versionRange>
                                        <goals>
                                            <goal>
                                                unpack-dependencies
                                            </goal>
                                            <goal>unpack</goal>
                                            <goal>
                                                copy-dependencies
                                            </goal>
                                            <goal>copy</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-antrun-plugin</artifactId>
                                        <versionRange>[1.7,)</versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>license-maven-plugin</artifactId>
                                        <versionRange>[1.8,)</versionRange>
                                        <goals>
                                            <goal>update-file-header</goal>
                                            <goal>update-project-license</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-plugin-plugin</artifactId>
                                        <versionRange>[3.4,)</versionRange>
                                        <goals>
                                            <goal>descriptor</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <extensions>
            <extension>
                <!-- Enabling the use of external ssh commands to deliver artifacts to
                    our repo. We are using putty, which means that authentication is done by
                    pageant :-) -->
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>1.0-beta-6</version>
            </extension>
        </extensions>

        <plugins>
            <!-- add the gpl-2 license header to our source files. Note that the source
                files in java-legacy were not (entirely) created/edited by us and already
                have their own license header with which we don't want to tamper. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>1.16</version>
                <executions>
                    <execution>
                        <id>update-file-header</id>
                        <goals>
                            <goal>update-file-header</goal>
                        </goals>
                        <!-- don't update the file headers. it created too many unwanted changes -->
                        <!-- phase>process-sources</phase -->
                        <configuration>
                            <licenseName>${license.name}</licenseName>
                            <roots>
                                <root>src/main/java</root>
                                <root>src/test</root>
                            </roots>
                            <excludes>
                                <!-- the license header might be placed right into the preexisting
                                    package-info-javadoc and introdcue a compiler syntax error, so we exclude
                                    this -->
                                <exclude>**/package-info.java</exclude>
                                <!-- our only json files are test samples; we don't need to license
                                    them, but the license header would cause trouble reading/parsing the json
                                    files. that's why we exclude them -->
                                <exclude>**/*.json</exclude>
                                <!-- with xml it's similar as it is with json -->
                                <exclude>**/*.xml</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>update-project-license</id>
                        <goals>
                            <goal>update-project-license</goal>
                        </goals>
                        <phase>process-sources</phase>
                        <configuration>
                            <licenseName>${license.name}</licenseName>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- We always want to attach the sources -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-springboot-properties</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <encoding>UTF-8</encoding>
                            <delimiters>
                                <delimiter>@</delimiter>
                                <useDefaultDelimiters>false</useDefaultDelimiters>
                            </delimiters>
                            <outputDirectory>${project.build.directory}/classes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <include>application*.properties</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Disable the f..ing stupid false positive giver enforcer plugin (teo, tobi) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- If there is a maven java-gen sources directory, this profile will
                activate and add the directory as another sources directory -->
            <id>add-source-java-gen</id>
            <activation>
                <file>
                    <exists>src/main/java-gen</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!-- Adds src/main/java-gen as additional source folder (if the directory
                            is present) -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-source-java-gen</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/main/java-gen</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- If there is a maven java-legacy sources directory, this profile will
                activate and add the directory as another sources directory -->
            <id>add-source-java-legacy</id>
            <activation>
                <file>
                    <exists>src/main/java-legacy</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!-- Adds src/main/java-gen as additional source folder (if the directory
                            is present) -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-source-java-legacy</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/main/java-legacy</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- If the environment variable BUILD_NUMBER is not set, it means that
                we are not building on jenkins, so we substitute the value "LOCAL-BUILD"
                instead. And we set BUILD_NUMBER_NUMERIC to 0, because some parts of the
                build (=>launch4j) requiere the build number to always be a number. -->
            <id>build-number-env-missing</id>
            <activation>
                <property>
                    <name>!env.BUILD_NUMBER</name>
                </property>
            </activation>
            <properties>
                <BUILD_NUMBER_NUMERIC>0</BUILD_NUMBER_NUMERIC>
                <env.BUILD_NUMBER>LOCAL-BUILD</env.BUILD_NUMBER>
            </properties>
        </profile>
        <profile>
            <!-- If the environment variable BUILD_NUMBER is set, we assume that it
                is numeric, and we set BUILD_NUMBER_NUMERIC to that value -->
            <id>build-number-env-provided</id>
            <activation>
                <property>
                    <name>env.BUILD_NUMBER</name>
                </property>
            </activation>
            <properties>
                <BUILD_NUMBER_NUMERIC>${env.BUILD_NUMBER}</BUILD_NUMBER_NUMERIC>
            </properties>
        </profile>

        <!--this profile is analog to "build-number-env-missing" -->
        <profile>
            <id>MF_UPSTREAM_BRANCH-env-missing</id>
            <activation>
                <property>
                    <name>!env.MF_UPSTREAM_BRANCH</name>
                </property>
            </activation>
            <properties>
                <env.MF_UPSTREAM_BRANCH>LOCAL-BUILD</env.MF_UPSTREAM_BRANCH>
            </properties>
        </profile>

    </profiles>
</project>
