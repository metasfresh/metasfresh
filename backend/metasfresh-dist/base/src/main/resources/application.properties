#
# use this port on order to not collide with the ports of other metasfresh services that might run in the same box
# also note that this is the port that we have to app in the default docker-compose.yml
server.port=8282

#
# Tomcat
#
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force-response=true

# because of infrastructure-reasons it's currently not easy to make the actuator available on /actuator/info
# thx to https://www.allprogrammingtutorials.com/tutorials/mapping-boot-endpoints-to-custom-path.php on how to change it back to the way it was with spring-boot-1
# also see https://github.com/metasfresh/metasfresh/issues/10969
management.endpoints.web.base-path=/

#
# actuator-endpoints
#
management.endpoints.web.exposure.include=*

# --------------------------------------------------------------------------------
# Build info
# --------------------------------------------------------------------------------
info.build.projectName=metasfresh-dist
info.build.ciBuildNo=@env.BUILD_NUMBER@
info.build.ciBuildTag=@env.BUILD_TAG@
info.build.ciBuildUrl=@env.BUILD_URL@
info.build.ciJobName=@env.JOB_NAME@


# --------------------------------------------------------------------------------
# Logging
# --------------------------------------------------------------------------------
#logging.path=f:/
# Location of the logging configuration file. For instance `classpath:logback.xml` for Logback
#logging.config=file:./logback.xml

#
# - metasfresh
logging.level.root=INFO
#logging.level.de.metas=INFO
#logging.level.org.adempiere=INFO
#logging.level.org.compiere=INFO
#logging.level.org.eevolution=INFO
#logging.level.org.adempiere.ad.housekeeping=INFO
#logging.level.org.compiere.model=INFO


# --------------------------------------------------------------------------------
# Elasticsearch
# --------------------------------------------------------------------------------
metasfresh.elasticsearch.host=search:9200

# --------------------------------------------------------------------------------
# RabbitMQ
# --------------------------------------------------------------------------------
# Goal: make sure to have strict in-order processing of messages
# Source for property-names: https://docs.spring.io/spring-boot/docs/2.4.3/reference/html/appendix-application-properties.html#common-application-properties
spring.rabbitmq.listener.direct.consumers-per-queue=1
spring.rabbitmq.listener.direct.prefetch=1
spring.rabbitmq.listener.simple.max-concurrency=1
spring.rabbitmq.listener.simple.prefetch=1
