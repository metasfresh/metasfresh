package de.metas.frontend_testing.masterdata.custom_qrcode_format;

import com.google.common.collect.ImmutableList;
import de.metas.frontend_testing.masterdata.MasterdataContext;
import de.metas.logging.LogManager;
import de.metas.scannable_code.format.ScannableCodeFormat;
import de.metas.scannable_code.format.ScannableCodeFormatCreateRequest;
import de.metas.scannable_code.format.ScannableCodeFormatQuery;
import de.metas.scannable_code.format.service.ScannableCodeFormatService;
import de.metas.util.Services;
import de.metas.util.time.PatternedDateTimeFormatter;
import lombok.Builder;
import lombok.NonNull;
import org.adempiere.ad.trx.api.ITrxManager;
import org.slf4j.Logger;

import java.util.List;

@Builder
public class CustomQRCodeFormatCommand
{
	@NonNull private static final Logger logger = LogManager.getLogger(CustomQRCodeFormatCommand.class);
	@NonNull private final ITrxManager trxManager = Services.get(ITrxManager.class);
	@NonNull private final ScannableCodeFormatService scannableCodeFormatService;

	@NonNull private final MasterdataContext context;
	@NonNull private final List<JsonCustomQRCodeFormatRequest> requests;

	private static final String TAGGING_DESCRIPTION = "generated by mobile UI frontend testing";

	public void execute()
	{
		trxManager.runInThreadInheritedTrx(this::execute0);
	}

	private void execute0()
	{
		deleteGeneratedFormats();
		requests.forEach(this::createFormat);
	}

	private void deleteGeneratedFormats()
	{
		final int countDelete = scannableCodeFormatService.delete(ScannableCodeFormatQuery.builder()
				.description(TAGGING_DESCRIPTION)
				.build());
		logger.info("Deleted {} existing custom QR code formats", countDelete);
	}

	private void createFormat(@NonNull final JsonCustomQRCodeFormatRequest request)
	{
		final ScannableCodeFormat format = scannableCodeFormatService.create(
				ScannableCodeFormatCreateRequest.builder()
						.name(request.getName())
						.description(TAGGING_DESCRIPTION)
						.parts(request.getParts()
								.stream()
								.map(part -> ScannableCodeFormatCreateRequest.Part.builder()
										.startPosition(part.getStartPosition())
										.endPosition(part.getEndPosition())
										.type(part.getType())
										.dateFormat(PatternedDateTimeFormatter.ofNullablePattern(part.getDateFormat()))
										.build())
								.collect(ImmutableList.toImmutableList())
						)
						.build()
		);

		logger.info("Created custom QR code format: {}", format);
	}
}