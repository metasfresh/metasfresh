
package de.metas.vertical.pharma.vendor.gateway.msv3.schema.v1;

import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;

import javax.xml.namespace.QName;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.1
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "Msv3BestellstatusAbfragenService", targetNamespace = "urn:msv3:v1", wsdlLocation = "file:/C:/work/new_dawn_uat_java21/metasfresh/backend/de.metas.vertical.pharma.msv3.schema.v1/src/main/resources/de/metas/vertical/pharma/vendor/gateway/msv3/schema/v1/Msv3BestellstatusAbfragenService.wsdl")
public class Msv3BestellstatusAbfragenService
    extends Service
{

    private static final URL MSV3BESTELLSTATUSABFRAGENSERVICE_WSDL_LOCATION;
    private static final WebServiceException MSV3BESTELLSTATUSABFRAGENSERVICE_EXCEPTION;
    private static final QName MSV3BESTELLSTATUSABFRAGENSERVICE_QNAME = new QName("urn:msv3:v1", "Msv3BestellstatusAbfragenService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/work/new_dawn_uat_java21/metasfresh/backend/de.metas.vertical.pharma.msv3.schema.v1/src/main/resources/de/metas/vertical/pharma/vendor/gateway/msv3/schema/v1/Msv3BestellstatusAbfragenService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        MSV3BESTELLSTATUSABFRAGENSERVICE_WSDL_LOCATION = url;
        MSV3BESTELLSTATUSABFRAGENSERVICE_EXCEPTION = e;
    }

    public Msv3BestellstatusAbfragenService() {
        super(__getWsdlLocation(), MSV3BESTELLSTATUSABFRAGENSERVICE_QNAME);
    }

    public Msv3BestellstatusAbfragenService(WebServiceFeature... features) {
        super(__getWsdlLocation(), MSV3BESTELLSTATUSABFRAGENSERVICE_QNAME, features);
    }

    public Msv3BestellstatusAbfragenService(URL wsdlLocation) {
        super(wsdlLocation, MSV3BESTELLSTATUSABFRAGENSERVICE_QNAME);
    }

    public Msv3BestellstatusAbfragenService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MSV3BESTELLSTATUSABFRAGENSERVICE_QNAME, features);
    }

    public Msv3BestellstatusAbfragenService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Msv3BestellstatusAbfragenService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns Msv3BestellstatusAbfragen
     */
    @WebEndpoint(name = "Msv3BestellstatusAbfragenPort")
    public Msv3BestellstatusAbfragen getMsv3BestellstatusAbfragenPort() {
        return super.getPort(new QName("urn:msv3:v1", "Msv3BestellstatusAbfragenPort"), Msv3BestellstatusAbfragen.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Msv3BestellstatusAbfragen
     */
    @WebEndpoint(name = "Msv3BestellstatusAbfragenPort")
    public Msv3BestellstatusAbfragen getMsv3BestellstatusAbfragenPort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:msv3:v1", "Msv3BestellstatusAbfragenPort"), Msv3BestellstatusAbfragen.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MSV3BESTELLSTATUSABFRAGENSERVICE_EXCEPTION!= null) {
            throw MSV3BESTELLSTATUSABFRAGENSERVICE_EXCEPTION;
        }
        return MSV3BESTELLSTATUSABFRAGENSERVICE_WSDL_LOCATION;
    }

}
